using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Data.Entity;

namespace Namaskara.Models
{
    public class InitialData : DropCreateDatabaseIfModelChanges<NamaskaraDb>
    {
        protected override void Seed(NamaskaraDb context)
        {
            List<Category> Categories = new List<Category>
            {
                new Category {Name = "Seeds & Grains" },
                new Category {Name = "Beans" },
                new Category {Name = "Canned Beans" },
                new Category {Name = "Dried Fruits" },
                new Category {Name = "Food Products" },
                new Category {Name = "Flour" },
                new Category {Name = "Oats" },
                new Category {Name = "Milk" },
                new Category {Name = "Oil & Vinegar" },
                new Category {Name = "Rice" },
                new Category {Name = "Salt" },
                new Category {Name = "Sweeteners" },
                new Category {Name = "Crackers & Snacks" },
                new Category {Name = "Herbal Teas" },
                new Category {Name = "Vitamins & Supplements" },
                new Category {Name = "Toiletries" }
            };

            List<Product> Products = new List<Product>
            {
                new Product { Name =  "Alfalfa Seed Natural", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Alfalfa Seed Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "alfafa seed organic", Origin = "China"},
                new Product { Name =  "Amaranth Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "amaranth", Origin = "Paraguay"},
                new Product { Name =  "Barley Hulled Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "barley hulled organic", Origin = ""},
                new Product { Name =  "Barley Pearled Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "barley pearled organic", Origin = "China"},
                new Product { Name =  "Buckwheat Hulled Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "buckwheat hulled", Origin = "China"},
                new Product { Name =  "Chia Seed (Black Organic)", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "black chia", Origin = ""},
                new Product { Name =  "Chia Seed (Black Natural)", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "black chia", Origin = ""},
                new Product { Name =  "Flaxseed/Linseed Brown Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "flaxseed brown", Origin = ""},
                new Product { Name =  "Flaxseed Golden Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "flaxseed golden", Origin = ""},
                new Product { Name =  "Flaxseed Broken Bio Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "flaxseed broken", Origin = ""},
                new Product { Name =  "Hatamogi Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "hatamogi (jobs tears or chinese barley)", Origin = ""},
                new Product { Name =  "Hemp Seed Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "hemp seed", Origin = ""},
                new Product { Name =  "Lecithin Granules", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "lecithin granule", Origin = ""},
                new Product { Name =  "Lecithine Granules Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Millet Grain Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "millet grain", Origin = ""},
                new Product { Name =  "Oats Groats Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "oats groats", Origin = ""},
                new Product { Name =  "Pumpkin Seed shelled AA Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "pumpkin seed shelled", Origin = ""},
                new Product { Name =  "Popcorn arg. Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "popcorn", Origin = ""},
                new Product { Name =  "Quinoa Super Grain Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "quinoa", Origin = ""},
                new Product { Name =  "Red Quinoa Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "quinoa red", Origin = ""},
                new Product { Name =  "Sunflower Kernel Hulled Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "sunflower kernel", Origin = ""},
                new Product { Name =  "Sesame Hulled Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "sesame hulled", Origin = ""},
                new Product { Name =  "Wheat Grain Organic", Category = Categories.Single(c => c.Name == "Seeds & Grains"), ImageUrl = "wheat grain", Origin = ""},

                new Product { Name =  "Adzuki Beans Organic #2", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "adzuki beans", Origin = ""},
                new Product { Name =  "Adzuki Beans Organic #3", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "adzuki beans", Origin = ""},
                new Product { Name =  "Almond Natural", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "almond", Origin = ""},
                new Product { Name =  "Brazilnut Natural", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "brazil nuts", Origin = ""},
                new Product { Name =  "Chestnut Dried", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "chestnut dried", Origin = ""},
                new Product { Name =  "Chickpeas Organic #3", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "chickpeas", Origin = ""},
                new Product { Name =  "Chickpeas Organic #2", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "chickpeas", Origin = ""},
                new Product { Name =  "Red Lentils Spilt Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "red lentil split", Origin = ""},
                new Product { Name =  "Green Split Peas Organic #2", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "green split pea", Origin = ""},
                new Product { Name =  "Green Split Peas Organic #4", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "green split pea", Origin = ""},
                new Product { Name =  "Brown Lentils Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "brown lentil", Origin = ""},
                new Product { Name =  "Lentils/Laird Green Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "green lentil laird", Origin = ""},
                new Product { Name =  "Lentils Green Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "green lentil", Origin = ""},
                new Product { Name =  "Macadamia Nuts Natural", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "macademia nuts", Origin = ""},
                new Product { Name =  "Mung Beans Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "mung beans", Origin = ""},
                new Product { Name =  "Navy Beans Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "navy beans", Origin = ""},
                new Product { Name =  "Pinto Beans Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "pinto beans", Origin = ""},
                new Product { Name =  "Pine Kernel Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "pine nuts kernel", Origin = ""},
                new Product { Name =  "Soya Beans Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "soya beans", Origin = ""},
                new Product { Name =  "Black Soya Beans Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "soya beans black", Origin = ""},
                new Product { Name =  "Red Kidney Beans Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "kidney beans red", Origin = ""},
                new Product { Name =  "White Kidney Organic (small)", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "kidney beans white", Origin = ""},
                new Product { Name =  "White Kidney Organic (medium)", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "kidney beans white", Origin = ""},
                new Product { Name =  "Walnut Halves Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "walnut halves", Origin = ""},
                new Product { Name =  "Walnut Diced Organic", Category = Categories.Single(c => c.Name == "Beans"), ImageUrl = "walnut diced", Origin = ""},

                new Product { Name =  "Adzuki Beans Organic", Category = Categories.Single(c => c.Name == "Canned Beans"), ImageUrl = "adzuki beans canned (eden)", Origin = ""},
                new Product { Name =  "Black Beans Organic", Category = Categories.Single(c => c.Name == "Canned Beans"), ImageUrl = "black beans canned (eden)", Origin = ""},
                new Product { Name =  "Black Eyed Peas Organic", Category = Categories.Single(c => c.Name == "Canned Beans"), ImageUrl = "black eyed peas canned (eden)", Origin = ""},
                new Product { Name =  "Black Soybeans Organic", Category = Categories.Single(c => c.Name == "Canned Beans"), ImageUrl = "black soy beans canned (eden)", Origin = ""},
                new Product { Name =  "Garbanzo Beans Organic", Category = Categories.Single(c => c.Name == "Canned Beans"), ImageUrl = "garbanzo beans canned (eden)", Origin = ""},
                new Product { Name =  "Navy Beans Organic(Canned)", Category = Categories.Single(c => c.Name == "Canned Beans"), ImageUrl = "navy beans canned (eden)", Origin = ""},
                new Product { Name =  "Pinto Beans Organic(Canned)", Category = Categories.Single(c => c.Name == "Canned Beans"), ImageUrl = "pinto beans canned (eden)", Origin = ""},

                new Product { Name =  "California Dates Organic", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "dates", Origin = ""},
                new Product { Name =  "Cranberries Organic", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "cranberries", Origin = ""},
                new Product { Name =  "Apricot Sweet Organic", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "apricots - dried", Origin = ""},
                new Product { Name =  "Apricot Natural", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "apricots - dried", Origin = ""},
                new Product { Name =  "Dates Whole Organic (w/o stone)", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "dates", Origin = ""},
                new Product { Name =  "Diced Fig Organic", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "figs - dried & diced", Origin = ""},
                new Product { Name =  "Figs Natural", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "figs - whole & dried", Origin = ""},
                new Product { Name =  "Gojiberry Natural", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "goji berries - dried", Origin = ""},
                new Product { Name =  "Prunes Pites Organic", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "prunes - dried & pitted", Origin = ""},
                new Product { Name =  "Sultanas / Raisin Organic", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "sultanas - dried", Origin = ""},
                new Product { Name =  "Umiboshi Plum Ball", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "umbeboshi (plum ball) - dried", Origin = ""},
                new Product { Name =  "Umiboshi with Red Shiso Leaf", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "", Origin = ""},
                new Product { Name =  "EDEN - Dried Blueberries", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "blueberries - dried", Origin = ""},
                new Product { Name =  "EDEN - Cranberries", Category = Categories.Single(c => c.Name == "Dried Fruits"), ImageUrl = "", Origin = ""},

                new Product { Name =  "Brewer's Yeast", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "brewers yiest", Origin = ""},
                new Product { Name =  "Nutritional Yeast", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "nutritional yiest", Origin = ""},
                new Product { Name =  "Arrowroot Organic", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "arrowroot flour", Origin = ""},
                new Product { Name =  "Carob Powder Light Organic", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "carob powder", Origin = ""},
                new Product { Name =  "Crust Margarine Organic", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Maca Powder Organic", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "maca powder", Origin = ""},
                new Product { Name =  "Maniooc Starch Organic", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "manioc startch", Origin = ""},
                new Product { Name =  "Pastry Margarine Organic", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Potato Starch Organic", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "potato starch", Origin = ""},
                new Product { Name =  "Tapioca Pearls Organic", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Whey Powder Organic", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "whey powder", Origin = ""},
                new Product { Name =  "Physillium Husks Organic", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "psyllium husk", Origin = ""},
                new Product { Name =  "Vegetarian Curry", Category = Categories.Single(c => c.Name == "Food Products"), ImageUrl = "vegetarian curry", Origin = ""},

                new Product { Name =  "Almond Flour Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "almond flour", Origin = ""},
                new Product { Name =  "Buckwheat Flour Organic (Gluten Free)", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "buckwheat flour", Origin = ""},
                new Product { Name =  "Barley Flour Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Coconut Flour Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "coconut flour", Origin = ""},
                new Product { Name =  "Corn Flour Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "corn flour", Origin = ""},
                new Product { Name =  "Kamut Flour Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "kamut flour", Origin = ""},
                new Product { Name =  "Oat Flour Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "oat flour", Origin = ""},
                new Product { Name =  "Quinoa Flour Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "quinoa flour", Origin = ""},
                new Product { Name =  "Rye Flour", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "rye flour", Origin = ""},
                new Product { Name =  "Soy Flour Non Toasted Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "soy flour - untoasted", Origin = ""},
                new Product { Name =  "Soy Flour Toasted Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "soy flour - toasted", Origin = ""},
                new Product { Name =  "Spelt Flour Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "spelt flour", Origin = ""},
                new Product { Name =  "Unbleach Lite Flour Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "unbleached flour lite", Origin = ""},
                new Product { Name =  "Wholemeal Plain Flour Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "wholemeal flour", Origin = ""},
                new Product { Name =  "White Flour Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "white flour", Origin = ""},
                new Product { Name =  "Whole Wheat Flour Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "whole wheat flour", Origin = ""},
                new Product { Name =  "Wheat Gluten Organic", Category = Categories.Single(c => c.Name == "Flour"), ImageUrl = "wheat gluten flour", Origin = ""},

                new Product { Name =  "Bulgur Coarse Organic", Category = Categories.Single(c => c.Name == "Oats"), ImageUrl = "bulgur coarse", Origin = ""},
                new Product { Name =  "Corn Semolina Organic", Category = Categories.Single(c => c.Name == "Oats"), ImageUrl = "corn semolina", Origin = ""},
                new Product { Name =  "Couscous Whole Wheat Organic", Category = Categories.Single(c => c.Name == "Oats"), ImageUrl = "whole wheat couscous", Origin = ""},
                new Product { Name =  "Millet Flakes Organic", Category = Categories.Single(c => c.Name == "Oats"), ImageUrl = "millet flakes", Origin = ""},
                new Product { Name =  "Muesli Magic Organic", Category = Categories.Single(c => c.Name == "Oats"), ImageUrl = "muesli magic", Origin = ""},
                new Product { Name =  "Muesli Blueberry Organic", Category = Categories.Single(c => c.Name == "Oats"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Instant Baby Oats Organic", Category = Categories.Single(c => c.Name == "Oats"), ImageUrl = "instant baby oats", Origin = ""},
                new Product { Name =  "Instant Baby / Oatflakes Fine Organic", Category = Categories.Single(c => c.Name == "Oats"), ImageUrl = "oat flakes", Origin = ""},
                new Product { Name =  "Oat Bran Organic", Category = Categories.Single(c => c.Name == "Oats"), ImageUrl = "oat brand", Origin = ""},
                new Product { Name =  "Rice Flakes Organic", Category = Categories.Single(c => c.Name == "Oats"), ImageUrl = "rice flakes", Origin = ""},
                new Product { Name =  "Rolled Oats Organic", Category = Categories.Single(c => c.Name == "Oats"), ImageUrl = "rolled oats", Origin = ""},
                new Product { Name =  "Rolled Oats / Oatflakes Course Organic", Category = Categories.Single(c => c.Name == "Oats"), ImageUrl = "rolled oats - coarse", Origin = ""},

                new Product { Name =  "Edensoy Carob", Category = Categories.Single(c => c.Name == "Milk"), ImageUrl = "edensoy carob", Origin = ""},
                new Product { Name =  "Edensoy Chocolate", Category = Categories.Single(c => c.Name == "Milk"), ImageUrl = "edensoy choc", Origin = ""},
                new Product { Name =  "Edensoy Vanilla", Category = Categories.Single(c => c.Name == "Milk"), ImageUrl = "edensoy vanilla", Origin = ""},
                new Product { Name =  "Edensoy Extra Vanilla", Category = Categories.Single(c => c.Name == "Milk"), ImageUrl = "edensoy vanilla extra", Origin = ""},
                new Product { Name =  "Edensoy Blend Rice & Soy", Category = Categories.Single(c => c.Name == "Milk"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Edensoy Extra Original", Category = Categories.Single(c => c.Name == "Milk"), ImageUrl = "", Origin = ""},
                new Product { Name =  "PURE HARVEST (Oat Milk)", Category = Categories.Single(c => c.Name == "Milk"), ImageUrl = "pure harvest oat milk", Origin = ""},
                new Product { Name =  "PURE HARVEST (Brown Rice Milk)", Category = Categories.Single(c => c.Name == "Milk"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Bonsoy", Category = Categories.Single(c => c.Name == "Milk"), ImageUrl = "bonsoy", Origin = ""},

                new Product { Name =  "RBD Coconut Oil", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "RBD coconut poil", Origin = ""},
                new Product { Name =  "Tamari Organic USA", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "", Origin = ""},
                new Product { Name =  "NG Tamari Organic", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "tamari sauce - NG", Origin = ""},
                new Product { Name =  "Tamari Organic", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "", Origin = ""},
                new Product { Name =  "NG Sesame Oil Toasted", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "sesame oil toasted - NG", Origin = ""},
                new Product { Name =  "Sesame Oil Extra Virgin Org", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "sesame oil extra virgin", Origin = ""},
                new Product { Name =  "Sesame Oil (light)", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "sesame oil light", Origin = ""},
                new Product { Name =  "Sesame Oil Toasted", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "", Origin = ""},
                new Product { Name =  "NG Shoyu Organic", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "shoyu - NG", Origin = ""},
                new Product { Name =  "NG Shoyu Organic Low Salt", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "shoyu low salt - NG", Origin = ""},
                new Product { Name =  "Shoyu Organic", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Shoyu Organic Low Salt", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Shoyu USA Organic", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "", Origin = ""},
                new Product { Name =  "BRAGGS Amino Liquid", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "BRAGGS amino", Origin = ""},
                new Product { Name =  "BRAGGS Apple Cider Vinegar Org", Category = Categories.Single(c => c.Name == "Oil & Vinegar"), ImageUrl = "BRAGGS apple cider vinegar", Origin = ""},

                new Product { Name =  "Akita Rice", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "akita rice", Origin = ""},
                new Product { Name =  "Niigita Rice", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "niigita rice", Origin = ""},
                new Product { Name =  "Wild Black RIce Organic", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "wild black rice", Origin = ""},
                new Product { Name =  "Wild Red Rice", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "wild red rice", Origin = ""},
                new Product { Name =  "Organic White Rice", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "white rice", Origin = ""},
                new Product { Name =  "Organic Blend Rice (3 Grain)", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "", Origin = ""},

                new Product { Name =  "Brown Rice Long Grain Organic", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "brown rice long grain", Origin = ""},
                new Product { Name =  "Brown Rice Short Grain Organic", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "brown rice short grain", Origin = ""},
                new Product { Name =  "White Rice Short Grain Organic", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "white rice short grain", Origin = ""},
                new Product { Name =  "Basmati Rice Brown Organic", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "basmati rice brown", Origin = ""},
                new Product { Name =  "Basmati Rice White Organic", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "basmati rice white", Origin = ""},
                new Product { Name =  "Glutinous Brown Rice Organic", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "glutinous brown rice", Origin = ""},
                new Product { Name =  "White Rice Short Organic", Category = Categories.Single(c => c.Name == "Rice"), ImageUrl = "", Origin = ""},

                new Product { Name =  "Atlantik Sea Salt Fine #2", Category = Categories.Single(c => c.Name == "Salt"), ImageUrl = "atlantik sea salt - fine", Origin = ""},
                new Product { Name =  "Atlantik Sea Salt Extra Fine #1", Category = Categories.Single(c => c.Name == "Salt"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Atlantik Sea Salt Coarse", Category = Categories.Single(c => c.Name == "Salt"), ImageUrl = "atlantik sea salt - coarse", Origin = ""},
                new Product { Name =  "Himalayan Rock Salt (30-50mm)", Category = Categories.Single(c => c.Name == "Salt"), ImageUrl = "himalayan rock salt - fine", Origin = ""},
                new Product { Name =  "Himalayan Rock Salt Unrefined", Category = Categories.Single(c => c.Name == "Salt"), ImageUrl = "himalayan rock salt - med", Origin = ""},
                new Product { Name =  "Himalayan Course Salt", Category = Categories.Single(c => c.Name == "Salt"), ImageUrl = "himalayan rock salt - coarse", Origin = ""},
                new Product { Name =  "Mount Andes Rock Salt Unrefined", Category = Categories.Single(c => c.Name == "Salt"), ImageUrl = "mt andes salt", Origin = ""},

                new Product { Name =  "Brown Raw Sugar Organic", Category = Categories.Single(c => c.Name == "Sweeteners"), ImageUrl = "brown sugar raw", Origin = ""},
                new Product { Name =  "Cane Sugar Light Organic", Category = Categories.Single(c => c.Name == "Sweeteners"), ImageUrl = "cane sugar light", Origin = ""},
                new Product { Name =  "Cane Sugar Light Gold Organic", Category = Categories.Single(c => c.Name == "Sweeteners"), ImageUrl = "cane sugar - gold light", Origin = ""},
                new Product { Name =  "Canesugar Uni Light Organic", Category = Categories.Single(c => c.Name == "Sweeteners"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Blackstrap Molasses Powder Natural", Category = Categories.Single(c => c.Name == "Sweeteners"), ImageUrl = "molasses powder - natural", Origin = ""},
                new Product { Name =  "Blackstrap Molasses Powder Organic", Category = Categories.Single(c => c.Name == "Sweeteners"), ImageUrl = "molasses powder - organic", Origin = ""},
                new Product { Name =  "Blackstrap Molasses Liquid Natural", Category = Categories.Single(c => c.Name == "Sweeteners"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Blackstrap Molasses Liquid Organic", Category = Categories.Single(c => c.Name == "Sweeteners"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Orange Sugar Natural", Category = Categories.Single(c => c.Name == "Sweeteners"), ImageUrl = "orange sugar", Origin = ""},
                new Product { Name =  "Barley Malt Organic", Category = Categories.Single(c => c.Name == "Sweeteners"), ImageUrl = "barley malt - organic", Origin = ""},
                new Product { Name =  "Maple Syrup Organic", Category = Categories.Single(c => c.Name == "Sweeteners"), ImageUrl = "maple syrup", Origin = ""},
                new Product { Name =  "Agave Syrup (light)", Category = Categories.Single(c => c.Name == "Sweeteners"), ImageUrl = "agave syrup", Origin = ""},

                new Product { Name =  "Kuranda Cashew & Almond", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "kuranda - cashew & almond", Origin = ""},
                new Product { Name =  "Kuranda Macademia & Hazelnut", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "kuranda - macadamia & hazelnut", Origin = ""},
                new Product { Name =  "Kuranda Pecan & Pistachio", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "kuranda - pecan & pistachio", Origin = ""},
                new Product { Name =  "Kuranda Nut Berry", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "kuranda - nut & berry", Origin = ""},
                new Product { Name =  "Kuranda Chia & Almond", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "kuranda - chia & almond", Origin = ""},
                new Product { Name =  "Kuranda Chia Nut & Berry", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Kuranda Chia Cacao Nibs", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Kuranda Chia & Quinoa", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "kuranda - chia & quinoa", Origin = ""},
                new Product { Name =  "Kuranda Muesli - Banana & Date w/ Amarath", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "kuranda muesli - banana & date", Origin = ""},
                new Product { Name =  "Kuranda Muesli - Berry Blend w/ Amarath", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "kuranda mesli - berry blend", Origin = ""},
                new Product { Name =  "Sea Vegetable Chips", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "sea vegs chips", Origin = ""},
                new Product { Name =  "Vegetable Chips", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "vegetable chips", Origin = ""},
                new Product { Name =  "Mungbeans Chip Muso", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "", Origin = ""},
                new Product { Name =  "Quinoa Crackers", Category = Categories.Single(c => c.Name == "Crackers & Snacks"), ImageUrl = "quinoa cracker", Origin = ""},

                new Product { Name =  "Alfafa Grass Powder (200 mesh) Organic", Category = Categories.Single(c => c.Name == "Vitamins & Supplements"), ImageUrl = "alfafa grass powder", Origin = ""},
                new Product { Name =  "Buckwheat Grass Powder (200 mesh) Organic", Category = Categories.Single(c => c.Name == "Vitamins & Supplements"), ImageUrl = "buckwheat grass powder", Origin = ""},
                new Product { Name =  "Barley Grass Powder (200 mesh) Organic", Category = Categories.Single(c => c.Name == "Vitamins & Supplements"), ImageUrl = "barley grass powder", Origin = ""},
                new Product { Name =  "Chlorella Powder (55% Protein) Organic", Category = Categories.Single(c => c.Name == "Vitamins & Supplements"), ImageUrl = "chlorella powder", Origin = ""},
                new Product { Name =  "Kale Powder (200 mesh) Organic", Category = Categories.Single(c => c.Name == "Vitamins & Supplements"), ImageUrl = "kale powder", Origin = ""},
                new Product { Name =  "Spirulina Powder Organic", Category = Categories.Single(c => c.Name == "Vitamins & Supplements"), ImageUrl = "spirulina powder", Origin = ""},
                new Product { Name =  "Spirulina Powder (PH) Organic", Category = Categories.Single(c => c.Name == "Vitamins & Supplements"), ImageUrl = "spirulina powder", Origin = ""},
                new Product { Name =  "Spirulina Tablet Organic", Category = Categories.Single(c => c.Name == "Vitamins & Supplements"), ImageUrl = "spirulina tablets", Origin = ""},
                new Product { Name =  "Wheat Grass Powder (200 mesh) Organic", Category = Categories.Single(c => c.Name == "Vitamins & Supplements"), ImageUrl = "wheatgrass powder", Origin = ""},

                new Product { Name =  "DR. Broners Liquid Soap Citrus Orange", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Liquid Soap Lavender", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Liquid Soap Eucalyptus", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Liquid Soap Almond", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Liquid Soap Peppermint", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Liquid Soap Tea Tree", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Liquid Soap Baby Mild", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Liquid Soap Rose", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Soap Bar Citrus Orange", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Soap Bar Lavender", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Soap Bar Eucalyptus", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Soap Bar Almond", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Soap Bar Peppermint", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Soap Bar Tea Tree", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Soap Bar Baby Mild", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Soap Bar Rose", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "", Origin = ""},
                new Product { Name =  "DR. Broners Lotion", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "dr bronners magic lotion", Origin = ""},
                new Product { Name =  "DR. Broners Skin & Tatto Balm", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "dr bronners body balm", Origin = ""},
                new Product { Name =  "Chandrika Ayurvedic Soap", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "chandrika ayurvedic soap", Origin = ""},
                new Product { Name =  "Vicco Toothpaste 10x", Category = Categories.Single(c => c.Name == "Toiletries"), ImageUrl = "vicco toothpaste", Origin = ""}

            };

            foreach (var item in Products)
            {
                context.Products.Add(item);
            }

            new List<Item>
            {
                new Item { Name = "Alfalfa Seed Natural", Size = "150 g", RetailPrice = 61750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Alfalfa Seed Natural") },
                new Item { Name = "Alfalfa Seed Organic", Size = "1 kg", RetailPrice = 315700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Alfalfa Seed Organic") },
                new Item { Name = "Alfalfa Seed Organic", Size = "500 g", RetailPrice = 173650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Alfalfa Seed Organic") },
                new Item { Name = "Alfalfa Seed Organic", Size = "250 g", RetailPrice = 82900M, IsAvailable = true, Product = Products.Single(m => m.Name == "Alfalfa Seed Organic") },
                new Item { Name = "Amaranth Organic", Size = "1 kg", RetailPrice = 115750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Amaranth Organic") },
                new Item { Name = "Amaranth Organic", Size = "500 g", RetailPrice = 63670M, IsAvailable = true, Product = Products.Single(m => m.Name == "Amaranth Organic") },
                new Item { Name = "Amaranth Organic", Size = "250 g", RetailPrice = 30400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Amaranth Organic") },
                new Item { Name = "Barley Hulled Organic", Size = "1 kg", RetailPrice = 128500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Barley Hulled Organic") },
                new Item { Name = "Barley Hulled Organic", Size = "500 g", RetailPrice = 70700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Barley Hulled Organic") },
                new Item { Name = "Barley Hulled Organic", Size = "250 g", RetailPrice = 33750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Barley Hulled Organic") },
                new Item { Name = "Barley Pearled Organic", Size = "1 kg", RetailPrice = 88600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Barley Pearled Organic") },
                new Item { Name = "Barley Pearled Organic", Size = "500 g", RetailPrice = 48750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Barley Pearled Organic") },
                new Item { Name = "Barley Pearled Organic", Size = "250 g", RetailPrice = 23250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Barley Pearled Organic") },
                new Item { Name = "Buckwheat Hulled Organic", Size = "1 kg", RetailPrice = 92800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Buckwheat Hulled Organic") },
                new Item { Name = "Buckwheat Hulled Organic", Size = "500 g", RetailPrice = 51000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Buckwheat Hulled Organic") },
                new Item { Name = "Buckwheat Hulled Organic", Size = "250 g", RetailPrice = 24350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Buckwheat Hulled Organic") },
                new Item { Name = "Chia Seed (Black Organic)", Size = "1 kg", RetailPrice = 582600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Chia Seed (Black Organic)") },
                new Item { Name = "Chia Seed (Black Organic)", Size = "500 g", RetailPrice = 320450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Chia Seed (Black Organic)") },
                new Item { Name = "Chia Seed (Black Organic)", Size = "250 g", RetailPrice = 152950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Chia Seed (Black Organic)") },
                new Item { Name = "Chia Seed (Black Natural)", Size = "1 kg", RetailPrice = 297250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Chia Seed (Black Natural)") },
                new Item { Name = "Chia Seed (Black Natural)", Size = "500 g", RetailPrice = 163450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Chia Seed (Black Natural)") },
                new Item { Name = "Chia Seed (Black Natural)", Size = "250 g", RetailPrice = 78000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Chia Seed (Black Natural)") },
                new Item { Name = "Flaxseed/Linseed Brown Organic", Size = "1 kg", RetailPrice = 92300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Flaxseed/Linseed Brown Organic") },
                new Item { Name = "Flaxseed/Linseed Brown Organic", Size = "500 g", RetailPrice = 50750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Flaxseed/Linseed Brown Organic") },
                new Item { Name = "Flaxseed/Linseed Brown Organic", Size = "250 g", RetailPrice = 24250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Flaxseed/Linseed Brown Organic") },
                new Item { Name = "Flaxseed Golden Organic", Size = "1 kg", RetailPrice = 125750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Flaxseed Golden Organic") },
                new Item { Name = "Flaxseed Golden Organic", Size = "500 g", RetailPrice = 69150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Flaxseed Golden Organic") },
                new Item { Name = "Flaxseed Golden Organic", Size = "250 g", RetailPrice = 33000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Flaxseed Golden Organic") },
                new Item { Name = "Flaxseed Broken Bio Organic", Size = "1 kg", RetailPrice = 106700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Flaxseed Broken Bio Organic") },
                new Item { Name = "Flaxseed Broken Bio Organic", Size = "500 g", RetailPrice = 58700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Flaxseed Broken Bio Organic") },
                new Item { Name = "Flaxseed Broken Bio Organic", Size = "250 g", RetailPrice = 28000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Flaxseed Broken Bio Organic") },
                new Item { Name = "Hatamogi Organic", Size = "1 kg", RetailPrice = 69000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Hatamogi Organic") },
                new Item { Name = "Hatamogi Organic", Size = "500 g", RetailPrice = 37950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Hatamogi Organic") },
                new Item { Name = "Hatamogi Organic", Size = "250 g", RetailPrice = 18150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Hatamogi Organic") },
                new Item { Name = "Hemp Seed Organic", Size = "1 kg", RetailPrice = 166650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Hemp Seed Organic") },
                new Item { Name = "Hemp Seed Organic", Size = "500 g", RetailPrice = 91650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Hemp Seed Organic") },
                new Item { Name = "Hemp Seed Organic", Size = "250 g", RetailPrice = 43750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Hemp Seed Organic") },
                new Item { Name = "Lecithin Granules", Size = "200 g", RetailPrice = 82450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Lecithin Granules") },
                new Item { Name = "Lecithin Granules", Size = "500 g", RetailPrice = 283900M, IsAvailable = true, Product = Products.Single(m => m.Name == "Lecithin Granules") },
                new Item { Name = "Lecithine Granules Organic", Size = "1 kg", RetailPrice = 438950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Lecithine Granules Organic") },
                new Item { Name = "Lecithine Granules Organic", Size = "500 g", RetailPrice = 241400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Lecithine Granules Organic") },
                new Item { Name = "Lecithine Granules Organic", Size = "250 g", RetailPrice = 132800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Lecithine Granules Organic") },
                new Item { Name = "Millet Grain Organic", Size = "1 kg", RetailPrice = 101000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Millet Grain Organic") },
                new Item { Name = "Millet Grain Organic", Size = "500 g", RetailPrice = 55600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Millet Grain Organic") },
                new Item { Name = "Millet Grain Organic", Size = "250 g", RetailPrice = 30550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Millet Grain Organic") },
                new Item { Name = "Oats Groats Organic", Size = "1 kg", RetailPrice = 101300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Oats Groats Organic") },
                new Item { Name = "Oats Groats Organic", Size = "500 g", RetailPrice = 55700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Oats Groats Organic") },
                new Item { Name = "Oats Groats Organic", Size = "250 g", RetailPrice = 30650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Oats Groats Organic") },
                new Item { Name = "Pumpkin Seed shelled AA Organic", Size = "1 kg", RetailPrice = 290600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pumpkin Seed shelled AA Organic") },
                new Item { Name = "Pumpkin Seed shelled AA Organic", Size = "500 g", RetailPrice = 159850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pumpkin Seed shelled AA Organic") },
                new Item { Name = "Pumpkin Seed shelled AA Organic", Size = "250 g", RetailPrice = 87900M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pumpkin Seed shelled AA Organic") },
                new Item { Name = "Popcorn arg. Organic", Size = "1 kg", RetailPrice = 95200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Popcorn arg. Organic") },
                new Item { Name = "Popcorn arg. Organic", Size = "500 g", RetailPrice = 52350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Popcorn arg. Organic") },
                new Item { Name = "Popcorn arg. Organic", Size = "250 g", RetailPrice = 25000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Popcorn arg. Organic") },
                new Item { Name = "Quinoa Super Grain Organic", Size = "1 kg", RetailPrice = 323300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Quinoa Super Grain Organic") },
                new Item { Name = "Quinoa Super Grain Organic", Size = "500 g", RetailPrice = 177850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Quinoa Super Grain Organic") },
                new Item { Name = "Quinoa Super Grain Organic", Size = "250 g", RetailPrice = 97800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Quinoa Super Grain Organic") },
                new Item { Name = "Red Quinoa Organic", Size = "1 kg", RetailPrice = 380000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Red Quinoa Organic") },
                new Item { Name = "Red Quinoa Organic", Size = "500 g", RetailPrice = 159850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Red Quinoa Organic") },
                new Item { Name = "Red Quinoa Organic", Size = "250 g", RetailPrice = 87900M, IsAvailable = true, Product = Products.Single(m => m.Name == "Red Quinoa Organic") },
                new Item { Name = "Sunflower Kernel Hulled Organic", Size = "1 kg", RetailPrice = 121200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Sunflower Kernel Hulled Organic") },
                new Item { Name = "Sunflower Kernel Hulled Organic", Size = "500 g", RetailPrice = 66650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Sunflower Kernel Hulled Organic") },
                new Item { Name = "Sunflower Kernel Hulled Organic", Size = "250 g", RetailPrice = 36700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Sunflower Kernel Hulled Organic") },
                new Item { Name = "Sesame Hulled Organic", Size = "1 kg", RetailPrice = 129900M, IsAvailable = true, Product = Products.Single(m => m.Name == "Sesame Hulled Organic") },
                new Item { Name = "Sesame Hulled Organic", Size = "500 g", RetailPrice = 71450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Sesame Hulled Organic") },
                new Item { Name = "Sesame Hulled Organic", Size = "250 g", RetailPrice = 39300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Sesame Hulled Organic") },
                new Item { Name = "Wheat Grain Organic", Size = "1 kg", RetailPrice = 72150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Wheat Grain Organic") },
                new Item { Name = "Wheat Grain Organic", Size = "500 g", RetailPrice = 39700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Wheat Grain Organic") },
                new Item { Name = "Wheat Grain Organic", Size = "250 g", RetailPrice = 21850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Wheat Grain Organic") },

                new Item { Name = "Adzuki Beans Organic #2", Size = "1 kg", RetailPrice = 115350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Adzuki Beans Organic #2") },
                new Item { Name = "Adzuki Beans Organic #2", Size = "500 g", RetailPrice = 63450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Adzuki Beans Organic #2") },
                new Item { Name = "Adzuki Beans Organic #2", Size = "250 g", RetailPrice = 30300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Adzuki Beans Organic #2") },
                new Item { Name = "Adzuki Beans Organic #3", Size = "1 kg", RetailPrice = 93200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Adzuki Beans Organic #3") },
                new Item { Name = "Adzuki Beans Organic #3", Size = "500 g", RetailPrice = 51250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Adzuki Beans Organic #3") },
                new Item { Name = "Adzuki Beans Organic #3", Size = "250 g", RetailPrice = 24450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Adzuki Beans Organic #3") },
                new Item { Name = "Almond Natural", Size = "1 kg", RetailPrice = 375950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Almond Natural") },
                new Item { Name = "Almond Natural", Size = "500 g", RetailPrice = 206800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Almond Natural") },
                new Item { Name = "Almond Natural", Size = "250 g", RetailPrice = 98700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Almond Natural") },
                new Item { Name = "Brazilnut Natural", Size = "1 kg", RetailPrice = 421850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Brazilnut Natural") },
                new Item { Name = "Brazilnut Natural", Size = "500 g", RetailPrice = 232000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Brazilnut Natural") },
                new Item { Name = "Brazilnut Natural", Size = "250 g", RetailPrice = 110800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Brazilnut Natural") },
                new Item { Name = "Chestnut Dried", IsAvailable = true, Product = Products.Single(m => m.Name == "Chestnut Dried") },
                new Item { Name = "Chickpeas Organic #2", Size = "1 kg", RetailPrice = 121500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Chickpeas Organic #2") },
                new Item { Name = "Chickpeas Organic #2", Size = "500 g", RetailPrice = 66850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Chickpeas Organic #2") },
                new Item { Name = "Chickpeas Organic #2", Size = "250 g", RetailPrice = 31900M, IsAvailable = true, Product = Products.Single(m => m.Name == "Chickpeas Organic #2") },
                new Item { Name = "Chickpeas Organic #3", Size = "1 kg", RetailPrice = 142450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Chickpeas Organic #3") },
                new Item { Name = "Chickpeas Organic #3", Size = "500 g", RetailPrice = 78350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Chickpeas Organic #3") },
                new Item { Name = "Chickpeas Organic #3", Size = "250 g", RetailPrice = 37400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Chickpeas Organic #3") },
                new Item { Name = "Red Lentils Spilt Organic", Size = "1 kg", RetailPrice = 95200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Red Lentils Spilt Organic") },
                new Item { Name = "Red Lentils Spilt Organic", Size = "500 g", RetailPrice = 52350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Red Lentils Spilt Organic") },
                new Item { Name = "Red Lentils Spilt Organic", Size = "250 g", RetailPrice = 24950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Red Lentils Spilt Organic") },
                new Item { Name = "Green Split Peas Organic #2", Size = "1 kg", RetailPrice = 123150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Green Split Peas Organic #2") },
                new Item { Name = "Green Split Peas Organic #2", Size = "500 g", RetailPrice = 67750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Green Split Peas Organic #2") },
                new Item { Name = "Green Split Peas Organic #2", Size = "250 g", RetailPrice = 32350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Green Split Peas Organic #2") },
                new Item { Name = "Green Split Peas Organic #4", Size = "1 kg", RetailPrice = 113750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Green Split Peas Organic #4") },
                new Item { Name = "Green Split Peas Organic #4", Size = "500 g", RetailPrice = 62600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Green Split Peas Organic #4") },
                new Item { Name = "Green Split Peas Organic #4", Size = "250 g", RetailPrice = 29900M, IsAvailable = true, Product = Products.Single(m => m.Name == "Green Split Peas Organic #4") },
                new Item { Name = "Brown Lentils Organic", Size = "1 kg", RetailPrice = 101650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Brown Lentils Organic") },
                new Item { Name = "Brown Lentils Organic", Size = "500 g", RetailPrice = 55900M, IsAvailable = true, Product = Products.Single(m => m.Name == "Brown Lentils Organic") },
                new Item { Name = "Brown Lentils Organic", Size = "250 g", RetailPrice = 26700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Brown Lentils Organic") },
                new Item { Name = "Lentils/Laird Green Organic", Size = "1 kg", RetailPrice = 108750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Lentils/Laird Green Organic") },
                new Item { Name = "Lentils/Laird Green Organic", Size = "500 g", RetailPrice = 59800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Lentils/Laird Green Organic") },
                new Item { Name = "Lentils/Laird Green Organic", Size = "250 g", RetailPrice = 28550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Lentils/Laird Green Organic") },
                new Item { Name = "Lentils Green Organic", Size = "1 kg", RetailPrice = 109300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Lentils Green Organic") },
                new Item { Name = "Lentils Green Organic", Size = "500 g", RetailPrice = 60100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Lentils Green Organic") },
                new Item { Name = "Lentils Green Organic", Size = "250 g", RetailPrice = 28700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Lentils Green Organic") },
                new Item { Name = "Macadamia Nuts Natural", Size = "1 kg", RetailPrice = 610250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Macadamia Nuts Natural") },
                new Item { Name = "Macadamia Nuts Natural", Size = "500 g", RetailPrice = 335650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Macadamia Nuts Natural") },
                new Item { Name = "Macadamia Nuts Natural", Size = "200 g", RetailPrice = 167850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Macadamia Nuts Natural") },
                new Item { Name = "Mung Beans Organic", Size = "1 kg", RetailPrice = 116250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Mung Beans Organic") },
                new Item { Name = "Mung Beans Organic", Size = "500 g", RetailPrice = 63950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Mung Beans Organic") },
                new Item { Name = "Mung Beans Organic", Size = "250 g", RetailPrice = 30500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Mung Beans Organic") },
                new Item { Name = "Navy Beans Organic", Size = "1 kg", RetailPrice = 62950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Navy Beans Organic") },
                new Item { Name = "Navy Beans Organic", Size = "500 g", RetailPrice = 34600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Navy Beans Organic") },
                new Item { Name = "Navy Beans Organic", Size = "250 g", RetailPrice = 16550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Navy Beans Organic") },
                new Item { Name = "Pinto Beans Organic", Size = "1 kg", RetailPrice = 71800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pinto Beans Organic") },
                new Item { Name = "Pinto Beans Organic", Size = "500 g", RetailPrice = 39500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pinto Beans Organic") },
                new Item { Name = "Pinto Beans Organic", Size = "250 g", RetailPrice = 18850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pinto Beans Organic") },
                new Item { Name = "Pine Kernel Organic", Size = "1 kg", RetailPrice = 1019400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pine Kernel Organic") },
                new Item { Name = "Pine Kernel Organic", Size = "500 g", RetailPrice = 560700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pine Kernel Organic") },
                new Item { Name = "Pine Kernel Organic", Size = "250 g", RetailPrice = 267600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pine Kernel Organic") },
                new Item { Name = "Soya Beans Organic", Size = "1 kg", RetailPrice = 86450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Soya Beans Organic") },
                new Item { Name = "Soya Beans Organic", Size = "500 g", RetailPrice = 47550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Soya Beans Organic") },
                new Item { Name = "Soya Beans Organic", Size = "250 g", RetailPrice = 22700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Soya Beans Organic") },
                new Item { Name = "Black Soya Beans Organic", Size = "2 kg", RetailPrice = 95200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Black Soya Beans Organic") },
                new Item { Name = "Black Soya Beans Organic", Size = "500 g", RetailPrice = 52350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Black Soya Beans Organic") },
                new Item { Name = "Black Soya Beans Organic", Size = "250 g", RetailPrice = 25000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Black Soya Beans Organic") },
                new Item { Name = "Red Kidney Beans Organic", Size = "1 kg", RetailPrice = 82800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Red Kidney Beans Organic") },
                new Item { Name = "Red Kidney Beans Organic", Size = "500 g", RetailPrice = 45550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Red Kidney Beans Organic") },
                new Item { Name = "Red Kidney Beans Organic", Size = "250 g", RetailPrice = 21750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Red Kidney Beans Organic") },
                new Item { Name = "White Kidney Organic (small)", Size = "1 kg", RetailPrice = 75200M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Kidney Organic (small)") },
                new Item { Name = "White Kidney Organic (small)", Size = "500 g", RetailPrice = 41400M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Kidney Organic (small)") },
                new Item { Name = "White Kidney Organic (small)", Size = "250 g", RetailPrice = 19750M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Kidney Organic (small)") },
                new Item { Name = "White Kidney Organic (medium)", Size = "1 kg", RetailPrice = 129100M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Kidney Organic (medium)") },
                new Item { Name = "White Kidney Organic (medium)", Size = "500 g", RetailPrice = 71000M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Kidney Organic (medium)") },
                new Item { Name = "White Kidney Organic (medium)", Size = "250 g", RetailPrice = 33900M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Kidney Organic (medium)") },
                new Item { Name = "Walnut Halves Organic", Size = "1 kg", RetailPrice = 369300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Walnut Halves Organic") },
                new Item { Name = "Walnut Halves Organic", Size = "500 g", RetailPrice = 203150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Walnut Halves Organic") },
                new Item { Name = "Walnut Halves Organic", Size = "250 g", RetailPrice = 97000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Walnut Halves Organic") },
                new Item { Name = "Walnut Diced Organic", Size = "1 kg", RetailPrice = 269000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Walnut Diced Organic") },
                new Item { Name = "Walnut Diced Organic", Size = "500 g", RetailPrice = 162800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Walnut Diced Organic") },
                new Item { Name = "Walnut Diced Organic", Size = "250 g", RetailPrice = 77700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Walnut Diced Organic") },

                new Item { Name = "Adzuki Beans Organic", Size = "425 g", RetailPrice = 38600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Adzuki Beans Organic") },
                new Item { Name = "Black Beans Organic", Size = "425 g", RetailPrice = 37400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Black Beans Organic") },
                new Item { Name = "Black Eyed Peas Organic", Size = "425 g", RetailPrice = 37400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Black Eyed Peas Organic") },
                new Item { Name = "Black Soybeans Organic", Size = "425 g", RetailPrice = 45350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Black Soybeans Organic") },
                new Item { Name = "Garbanzo Beans Organic", Size = "425 g", RetailPrice = 39750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Garbanzo Beans Organic") },
                new Item { Name = "Navy Beans Organic(Canned)", Size = "425 g", RetailPrice = 37400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Navy Beans Organic") },
                new Item { Name = "Pinto Beans Organic(Canned)", Size = "398 ml", RetailPrice = 37400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pinto Beans Organic") },

                new Item { Name = "California Dates Organic", Size = "500 g", RetailPrice = 307800M, IsAvailable = true, Product = Products.Single(m => m.Name == "California Dates Organic") },
                new Item { Name = "Cranberries Organic", Size = "100 g", RetailPrice = 72600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Cranberries Organic") },
                new Item { Name = "Apricot Sweet Organic", Size = "1 kg", RetailPrice = 222600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Apricot Sweet Organic") },
                new Item { Name = "Apricot Sweet Organic", Size = "500 g", RetailPrice = 122450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Apricot Sweet Organic") },
                new Item { Name = "Apricot Sweet Organic", Size = "250 g", RetailPrice = 58450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Apricot Sweet Organic") },
                new Item { Name = "Apricot Natural", Size = "1 kg", RetailPrice = 140100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Apricot Natural") },
                new Item { Name = "Apricot Natural", Size = "500 g", RetailPrice = 77100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Apricot Natural") },
                new Item { Name = "Apricot Natural", Size = "250 g", RetailPrice = 36800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Apricot Natural") },
                new Item { Name = "Dates Whole Organic (w/o stone)", Size = "1 kg", RetailPrice = 233600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Dates Whole Organic (w/o stone)") },
                new Item { Name = "Dates Whole Organic (w/o stone)", Size = "500 g", RetailPrice = 128500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Dates Whole Organic (w/o stone)") },
                new Item { Name = "Dates Whole Organic (w/o stone)", Size = "250 g", RetailPrice = 61350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Dates Whole Organic (w/o stone)") },
                new Item { Name = "Diced Fig Organic", Size = "1 kg", RetailPrice = 327500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Diced Fig Organic") },
                new Item { Name = "Diced Fig Organic", Size = "500 g", RetailPrice = 180100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Diced Fig Organic") },
                new Item { Name = "Diced Fig Organic", Size = "250 g", RetailPrice = 85950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Diced Fig Organic") },
                new Item { Name = "Figs Natural", Size = "1 kg", RetailPrice = 190500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Figs Natural") },
                new Item { Name = "Figs Natural", Size = "500 g", RetailPrice = 104800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Figs Natural") },
                new Item { Name = "Figs Natural", Size = "250 g", RetailPrice = 50000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Figs Natural") },
                new Item { Name = "Gojiberry Natural", Size = "1 kg", RetailPrice = 327800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Gojiberry Natural") },
                new Item { Name = "Gojiberry Natural", Size = "500 g", RetailPrice = 180300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Gojiberry Natural") },
                new Item { Name = "Gojiberry Natural", Size = "250 g", RetailPrice = 86100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Gojiberry Natural") },
                new Item { Name = "Prunes Pites Organic", Size = "1 kg", RetailPrice = 257950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Prunes Pites Organic") },
                new Item { Name = "Prunes Pites Organic", Size = "500 g", RetailPrice = 151850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Prunes Pites Organic") },
                new Item { Name = "Prunes Pites Organic", Size = "250 g", RetailPrice = 67700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Prunes Pites Organic") },
                new Item { Name = "Sultanas / Raisin Organic", Size = "1 kg", RetailPrice = 181000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Sultanas / Raisin Organic") },
                new Item { Name = "Sultanas / Raisin Organic", Size = "500 g", RetailPrice = 99550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Sultanas / Raisin Organic") },
                new Item { Name = "Sultanas / Raisin Organic", Size = "250 g", RetailPrice = 47550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Sultanas / Raisin Organic") },
                new Item { Name = "Umiboshi Plum Ball", Size = "10 kg", RetailPrice = 6603000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Umiboshi Plum Ball") },
                new Item { Name = "Umiboshi with Red Shiso Leaf", Size = "1 kg", RetailPrice = 939750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Umiboshi with Red Shiso Leaf") },
                new Item { Name = "EDEN - Dried Blueberries", Size = "113 g", RetailPrice = 136100M, IsAvailable = true, Product = Products.Single(m => m.Name == "EDEN - Dried Blueberries") },
                new Item { Name = "EDEN - Cranberries", Size = "113 g", RetailPrice = 60750M, IsAvailable = true, Product = Products.Single(m => m.Name == "EDEN - Cranberries") },

                new Item { Name = "Brewer's Yeast", Size = "150 g", RetailPrice = 51150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Brewer's Yeast") },
                new Item { Name = "Nutritional Yeast", Size = "100 g", RetailPrice = 56100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Nutritional Yeast") },
                new Item { Name = "Arrowroot Organic", Size = "1 kg", RetailPrice = 202700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Arrowroot Organic") },
                new Item { Name = "Arrowroot Organic", Size = "500 g", RetailPrice = 111500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Arrowroot Organic") },
                new Item { Name = "Arrowroot Organic", Size = "250 g", RetailPrice = 53200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Arrowroot Organic") },
                new Item { Name = "Carob Powder Light Organic", Size = "1 kg", RetailPrice = 160950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Carob Powder Light Organic") },
                new Item { Name = "Carob Powder Light Organic", Size = "500 g", RetailPrice = 88550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Carob Powder Light Organic") },
                new Item { Name = "Carob Powder Light Organic", Size = "250 g", RetailPrice = 42250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Carob Powder Light Organic") },
                new Item { Name = "Crust Margarine Organic", Size = "1 kg", RetailPrice = 135700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Crust Margarine Organic") },
                new Item { Name = "Crust Margarine Organic", Size = "500 g", RetailPrice = 74650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Crust Margarine Organic") },
                new Item { Name = "Crust Margarine Organic", Size = "250 g", RetailPrice = 35650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Crust Margarine Organic") },
                new Item { Name = "Maca Powder Organic", Size = "1 kg", RetailPrice = 1398500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Maca Powder Organic") },
                new Item { Name = "Maca Powder Organic", Size = "500 g", RetailPrice = 769200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Maca Powder Organic") },
                new Item { Name = "Maca Powder Organic", Size = "250 g", RetailPrice = 367100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Maca Powder Organic") },
                new Item { Name = "Maniooc Starch Organic", Size = "1 kg", RetailPrice = 82550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Maniooc Starch Organic") },
                new Item { Name = "Maniooc Starch Organic", Size = "500 g", RetailPrice = 45400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Maniooc Starch Organic") },
                new Item { Name = "Maniooc Starch Organic", Size = "250 g", RetailPrice = 21700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Maniooc Starch Organic") },
                new Item { Name = "Pastry Margarine Organic", Size = "1 kg", RetailPrice = 132100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pastry Margarine Organic") },
                new Item { Name = "Pastry Margarine Organic", Size = "500 g", RetailPrice = 72650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pastry Margarine Organic") },
                new Item { Name = "Pastry Margarine Organic", Size = "250 g", RetailPrice = 34700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Pastry Margarine Organic") },
                new Item { Name = "Potato Starch Organic", Size = "1 kg", RetailPrice = 104950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Potato Starch Organic") },
                new Item { Name = "Potato Starch Organic", Size = "500 g", RetailPrice = 57750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Potato Starch Organic") },
                new Item { Name = "Potato Starch Organic", Size = "250 g", RetailPrice = 27550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Potato Starch Organic") },
                new Item { Name = "Tapioca Pearls Organic", Size = "1 kg", RetailPrice = 110550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Tapioca Pearls Organic") },
                new Item { Name = "Tapioca Pearls Organic", Size = "500 g", RetailPrice = 60800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Tapioca Pearls Organic") },
                new Item { Name = "Tapioca Pearls Organic", Size = "250 g", RetailPrice = 33450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Tapioca Pearls Organic") },
                new Item { Name = "Whey Powder Organic", Size = "1 kg", RetailPrice = 228400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Whey Powder Organic") },
                new Item { Name = "Whey Powder Organic", Size = "500 g", RetailPrice = 125600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Whey Powder Organic") },
                new Item { Name = "Whey Powder Organic", Size = "250 g", RetailPrice = 59950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Whey Powder Organic") },
                new Item { Name = "Physillium Husks Organic", Size = "1 kg", RetailPrice = 371100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Physillium Husks Organic") },
                new Item { Name = "Physillium Husks Organic", Size = "500 g", RetailPrice = 204150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Physillium Husks Organic") },
                new Item { Name = "Physillium Husks Organic", Size = "200 g", RetailPrice = 97450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Physillium Husks Organic") },
                new Item { Name = "Vegetarian Curry", Size = "1 kg", RetailPrice = 395950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Vegetarian Curry") },
                new Item { Name = "Vegetarian Curry", Size = "100 g", RetailPrice = 49200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Vegetarian Curry") },

                new Item { Name = "Almond Flour Organic", Size = "1 kg", RetailPrice = 371100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Almond Flour Organic") },
                new Item { Name = "Almond Flour Organic", Size = "500 g", RetailPrice = 204150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Almond Flour Organic") },
                new Item { Name = "Almond Flour Organic", Size = "250 g", RetailPrice = 97450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Almond Flour Organic") },

                new Item { Name = "Buckwheat Flour Organic (Gluten Free)", Size = "1 kg", RetailPrice = 114700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Buckwheat Flour Organic (Gluten Free)") },
                new Item { Name = "Buckwheat Flour Organic (Gluten Free)", Size = "500 g", RetailPrice = 63100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Buckwheat Flour Organic (Gluten Free)") },
                new Item { Name = "Buckwheat Flour Organic (Gluten Free)", Size = "250 g", RetailPrice = 30150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Buckwheat Flour Organic (Gluten Free)") },

                new Item { Name = "Barley Flour Organic", Size = "1 kg", RetailPrice = 86650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Barley Flour Organic") },
                new Item { Name = "Barley Flour Organic", Size = "500 g", RetailPrice = 47700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Barley Flour Organic") },
                new Item { Name = "Barley Flour Organic", Size = "250 g", RetailPrice = 22750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Barley Flour Organic") },

                new Item { Name = "Coconut Flour Organic", Size = "1 kg", RetailPrice = 149300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Coconut Flour Organic") },
                new Item { Name = "Coconut Flour Organic", Size = "500 g", RetailPrice = 82100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Coconut Flour Organic") },
                new Item { Name = "Coconut Flour Organic", Size = "250 g", RetailPrice = 39200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Coconut Flour Organic") },

                new Item { Name = "Corn Flour Organic", Size = "1 kg", RetailPrice = 82100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Corn Flour Organic") },
                new Item { Name = "Corn Flour Organic", Size = "500 g", RetailPrice = 45150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Corn Flour Organic") },
                new Item { Name = "Corn Flour Organic", Size = "250 g", RetailPrice = 21550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Corn Flour Organic") },

                new Item { Name = "Kamut Flour Organic", Size = "1 kg", RetailPrice = 106350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Kamut Flour Organic") },
                new Item { Name = "Kamut Flour Organic", Size = "500 g", RetailPrice = 58500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Kamut Flour Organic") },
                new Item { Name = "Kamut Flour Organic", Size = "250 g", RetailPrice = 27950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Kamut Flour Organic") },

                new Item { Name = "Oat Flour Organic", Size = "1 kg", RetailPrice = 75600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Oat Flour Organic") },
                new Item { Name = "Oat Flour Organic", Size = "500 g", RetailPrice = 41600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Oat Flour Organic") },
                new Item { Name = "Oat Flour Organic", Size = "250 g", RetailPrice = 19850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Oat Flour Organic") },

                new Item { Name = "Quinoa Flour Organic", Size = "1 kg", RetailPrice = 307500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Quinoa Flour Organic") },
                new Item { Name = "Quinoa Flour Organic", Size = "500 g", RetailPrice = 169200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Quinoa Flour Organic") },
                new Item { Name = "Quinoa Flour Organic", Size = "250 g", RetailPrice = 93100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Quinoa Flour Organic") },

                new Item { Name = "Rye Flour", Size = "1 kg", RetailPrice = 75600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Rye Flour") },
                new Item { Name = "Rye Flour", Size = "500 g", RetailPrice = 41600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Rye Flour") },
                new Item { Name = "Rye Flour", Size = "250 g", RetailPrice = 19850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Rye Flour") },

                new Item { Name = "Soy Flour Non Toasted Organic", Size = "1 kg", RetailPrice = 118850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Soy Flour Non Toasted Organic") },
                new Item { Name = "Soy Flour Non Toasted Organic", Size = "500 g", RetailPrice = 65400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Soy Flour Non Toasted Organic") },
                new Item { Name = "Soy Flour Non Toasted Organic", Size = "250 g", RetailPrice = 31200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Soy Flour Non Toasted Organic") },

                new Item { Name = "Soy Flour Toasted Organic", Size = "1 kg", RetailPrice = 133900M, IsAvailable = true, Product = Products.Single(m => m.Name == "Soy Flour Toasted Organic") },
                new Item { Name = "Soy Flour Toasted Organic", Size = "500 g", RetailPrice = 73650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Soy Flour Toasted Organic") },
                new Item { Name = "Soy Flour Toasted Organic", Size = "250 g", RetailPrice = 35150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Soy Flour Toasted Organic") },

                new Item { Name = "Spelt Flour Organic", Size = "1 kg", RetailPrice = 134600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Spelt Flour Organic") },
                new Item { Name = "Spelt Flour Organic", Size = "500 g", RetailPrice = 74100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Spelt Flour Organic") },
                new Item { Name = "Spelt Flour Organic", Size = "250 g", RetailPrice = 35350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Spelt Flour Organic") },

                new Item { Name = "Unbleach Lite Flour Organic", Size = "1 kg", RetailPrice = 84100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Unbleach Lite Flour Organic") },
                new Item { Name = "Unbleach Lite Flour Organic", Size = "500 g", RetailPrice = 46250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Unbleach Lite Flour Organic") },
                new Item { Name = "Unbleach Lite Flour Organic", Size = "250 g", RetailPrice = 22100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Unbleach Lite Flour Organic") },

                new Item { Name = "Wholemeal Plain Flour Organic", Size = "1 kg", RetailPrice = 79300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Wholemeal Plain Flour Organic") },
                new Item { Name = "Wholemeal Plain Flour Organic", Size = "500 g", RetailPrice = 43600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Wholemeal Plain Flour Organic") },
                new Item { Name = "Wholemeal Plain Flour Organic", Size = "250 g", RetailPrice = 20850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Wholemeal Plain Flour Organic") },

                new Item { Name = "White Flour Organic", Size = "1 kg", RetailPrice = 100300M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Flour Organic") },
                new Item { Name = "White Flour Organic", Size = "500 g", RetailPrice = 55150M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Flour Organic") },
                new Item { Name = "White Flour Organic", Size = "250 g", RetailPrice = 26350M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Flour Organic") },

                new Item { Name = "Whole Wheat Flour Organic", Size = "1 kg", RetailPrice = 97950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Whole Wheat Flour Organic") },
                new Item { Name = "Whole Wheat Flour Organic", Size = "500 g", RetailPrice = 53900M, IsAvailable = true, Product = Products.Single(m => m.Name == "Whole Wheat Flour Organic") },
                new Item { Name = "Whole Wheat Flour Organic", Size = "250 g", RetailPrice = 25750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Whole Wheat Flour Organic") },

                new Item { Name = "Wheat Gluten Organic", Size = "1 kg", RetailPrice = 199450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Wheat Gluten Organic") },
                new Item { Name = "Wheat Gluten Organic", Size = "500 g", RetailPrice = 109700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Wheat Gluten Organic") },
                new Item { Name = "Wheat Gluten Organic", Size = "250 g", RetailPrice = 52400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Wheat Gluten Organic") },

                new Item { Name = "Bulgur Coarse Organic", Size = "1 kg", RetailPrice = 95200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Bulgur Coarse Organic") },
                new Item { Name = "Bulgur Coarse Organic", Size = "500 g", RetailPrice = 52350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Bulgur Coarse Organic") },
                new Item { Name = "Bulgur Coarse Organic", Size = "250 g", RetailPrice = 28800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Bulgur Coarse Organic") },

                new Item { Name = "Corn Semolina Organic", Size = "1 kg", RetailPrice = 95200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Corn Semolina Organic") },
                new Item { Name = "Corn Semolina Organic", Size = "500 g", RetailPrice = 52350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Corn Semolina Organic") },
                new Item { Name = "Corn Semolina Organic", Size = "250 g", RetailPrice = 25000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Corn Semolina Organic") },

                new Item { Name = "Couscous Whole Wheat Organic", Size = "1 kg", RetailPrice = 129100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Couscous Whole Wheat Organic") },
                new Item { Name = "Couscous Whole Wheat Organic", Size = "500 g", RetailPrice = 71000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Couscous Whole Wheat Organic") },
                new Item { Name = "Couscous Whole Wheat Organic", Size = "250 g", RetailPrice = 33900M, IsAvailable = true, Product = Products.Single(m => m.Name == "Couscous Whole Wheat Organic") },

                new Item { Name = "Millet Flakes Organic", Size = "1 kg", RetailPrice = 132300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Millet Flakes Organic") },
                new Item { Name = "Millet Flakes Organic", Size = "500 g", RetailPrice = 72750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Millet Flakes Organic") },
                new Item { Name = "Millet Flakes Organic", Size = "250 g", RetailPrice = 40100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Millet Flakes Organic") },

                new Item { Name = "Muesli Magic Organic", Size = "1 kg", RetailPrice = 203350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Muesli Magic Organic") },
                new Item { Name = "Muesli Magic Organic", Size = "500 g", RetailPrice = 111850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Muesli Magic Organic") },
                new Item { Name = "Muesli Magic Organic", Size = "250 g", RetailPrice = 61500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Muesli Magic Organic") },

                new Item { Name = "Muesli Blueberry Organic", Size = "1 kg", RetailPrice = 218000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Muesli Blueberry Organic") },
                new Item { Name = "Muesli Blueberry Organic", Size = "500 g", RetailPrice = 119900M, IsAvailable = true, Product = Products.Single(m => m.Name == "Muesli Blueberry Organic") },
                new Item { Name = "Muesli Blueberry Organic", Size = "250 g", RetailPrice = 65950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Muesli Blueberry Organic") },

                new Item { Name = "Instant Baby Oats Organic", Size = "1 kg", RetailPrice = 97000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Instant Baby Oats Organic") },
                new Item { Name = "Instant Baby Oats Organic", Size = "500 g", RetailPrice = 53350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Instant Baby Oats Organic") },
                new Item { Name = "Instant Baby Oats Organic", Size = "250 g", RetailPrice = 29350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Instant Baby Oats Organic") },

                new Item { Name = "Instant Baby / Oatflakes Fine Organic", Size = "1 kg", RetailPrice = 85350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Instant Baby / Oatflakes Fine Organic") },
                new Item { Name = "Instant Baby / Oatflakes Fine Organic", Size = "500 g", RetailPrice = 46950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Instant Baby / Oatflakes Fine Organic") },
                new Item { Name = "Instant Baby / Oatflakes Fine Organic", Size = "250 g", RetailPrice = 25850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Instant Baby / Oatflakes Fine Organic") },

                new Item { Name = "Oat Bran Organic", Size = "1 kg", RetailPrice = 136100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Oat Bran Organic") },
                new Item { Name = "Oat Bran Organic", Size = "500 g", RetailPrice = 74850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Oat Bran Organic") },
                new Item { Name = "Oat Bran Organic", Size = "250 g", RetailPrice = 41200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Oat Bran Organic") },

                new Item { Name = "Rice Flakes Organic", Size = "1 kg", RetailPrice = 119250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Rice Flakes Organic") },
                new Item { Name = "Rice Flakes Organic", Size = "500 g", RetailPrice = 65600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Rice Flakes Organic") },
                new Item { Name = "Rice Flakes Organic", Size = "250 g", RetailPrice = 36100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Rice Flakes Organic") },

                new Item { Name = "Rolled Oats Organic", Size = "1 kg", RetailPrice = 114200M, IsAvailable = true, Product = Products.Single(m => m.Name == "Rolled Oats Organic") },
                new Item { Name = "Rolled Oats Organic", Size = "500 g", RetailPrice = 62800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Rolled Oats Organic") },
                new Item { Name = "Rolled Oats Organic", Size = "250 g", RetailPrice = 36100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Rolled Oats Organic") },

                new Item { Name = "Rolled Oats / Oatflakes Course Organic", Size = "1 kg", RetailPrice = 82100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Rolled Oats / Oatflakes Course Organic") },
                new Item { Name = "Rolled Oats / Oatflakes Course Organic", Size = "500 g", RetailPrice = 45150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Rolled Oats / Oatflakes Course Organic") },
                new Item { Name = "Rolled Oats / Oatflakes Course Organic", Size = "250 g", RetailPrice = 24850M, IsAvailable = true, Product = Products.Single(m => m.Name == "Rolled Oats / Oatflakes Course Organic") },

                new Item { Name = "Edensoy Carob", Size = "946 ml", RetailPrice = 89300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Edensoy Carob") },
                new Item { Name = "Edensoy Carob", Size = "250 ml", RetailPrice = 72000M, IsAvailable = true, Product = Products.Single(m => m.Name == "Edensoy Carob") },

                new Item { Name = "Edensoy Chocolate", Size = "946 ml", RetailPrice = 83450M, IsAvailable = true, Product = Products.Single(m => m.Name == "Edensoy Chocolate") },
                new Item { Name = "Edensoy Chocolate", Size = "250 ml", RetailPrice = 85650M, IsAvailable = true, Product = Products.Single(m => m.Name == "Edensoy Chocolate") },

                new Item { Name = "Edensoy Vanilla", Size = "946 ml", RetailPrice = 88750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Edensoy Vanilla") },
                new Item { Name = "Edensoy Vanilla", Size = "250 ml", RetailPrice = 77500M, IsAvailable = true, Product = Products.Single(m => m.Name == "Edensoy Vanilla") },

                new Item { Name = "Edensoy Extra Vanilla", Size = "946 ml", RetailPrice = 82100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Edensoy Extra Vanilla") },
                
                new Item { Name = "Edensoy Blend Rice & Soy", Size = "250 ml", RetailPrice = 31100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Edensoy Blend Rice & Soy") },
                new Item { Name = "Edensoy Extra Original", Size = "250 ml", RetailPrice = 28250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Edensoy Extra Original") },

                new Item { Name = "PURE HARVEST (Oat Milk)", Size = "1 ltr", RetailPrice = 88000M, IsAvailable = true, Product = Products.Single(m => m.Name == "PURE HARVEST (Oat Milk)") },
                new Item { Name = "PURE HARVEST (Brown Rice Milk)", Size = "1 ltr", RetailPrice = 88000M, IsAvailable = true, Product = Products.Single(m => m.Name == "PURE HARVEST (Brown Rice Milk)") },
                new Item { Name = "Bonsoy", Size = "1 ltr", RetailPrice = 0M, IsAvailable = false, Product = Products.Single(m => m.Name == "Bonsoy") },

                new Item { Name = "RBD Coconut Oil", Size = "1 kg", RetailPrice = 140750M, IsAvailable = true, Product = Products.Single(m => m.Name == "RBD Coconut Oil") },
                new Item { Name = "RBD Coconut Oil", Size = "500 g", RetailPrice = 77450M, IsAvailable = true, Product = Products.Single(m => m.Name == "RBD Coconut Oil") },
                new Item { Name = "RBD Coconut Oil", Size = "250 g", RetailPrice = 42600M, IsAvailable = true, Product = Products.Single(m => m.Name == "RBD Coconut Oil") },

                new Item { Name = "Tamari Organic USA", Size = "5 ltr", RetailPrice = 733250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Tamari Organic USA") },

                new Item { Name = "NG Tamari Organic", Size = "330 ml", RetailPrice = 118100M, IsAvailable = true, Product = Products.Single(m => m.Name == "NG Tamari Organic") },
                new Item { Name = "NG Tamari Organic", Size = "5 ltr", RetailPrice = 1285950M, IsAvailable = true, Product = Products.Single(m => m.Name == "NG Tamari Organic") },

                new Item { Name = "Tamari Organic", Size = "20 ltr", RetailPrice = 5766550M, IsAvailable = true, Product = Products.Single(m => m.Name == "Tamari Organic") },

                new Item { Name = "NG Sesame Oil Toasted", Size = "330 ml", RetailPrice = 130750M, IsAvailable = true, Product = Products.Single(m => m.Name == "NG Sesame Oil Toasted") },
                new Item { Name = "Sesame Oil Extra Virgin Org", Size = "473 ml", RetailPrice = 135250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Sesame Oil Extra Virgin Org") },
                new Item { Name = "Sesame Oil (light)", Size = "650 ml", RetailPrice = 278950M, IsAvailable = true, Product = Products.Single(m => m.Name == "Sesame Oil (light)") },

                new Item { Name = "Sesame Oil Toasted", Size = "10 ltr", RetailPrice = 3592150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Sesame Oil Toasted") },
                new Item { Name = "NG Shoyu Organic", Size = "330 ml", RetailPrice = 94200M, IsAvailable = true, Product = Products.Single(m => m.Name == "NG Shoyu Organic") },
                new Item { Name = "NG Shoyu Organic Low Salt", Size = "330 ml", RetailPrice = 106550M, IsAvailable = true, Product = Products.Single(m => m.Name == "NG Shoyu Organic Low Salt") },

                new Item { Name = "Shoyu Organic", Size = "20 ltr", RetailPrice = 4651100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Shoyu Organic") },
                new Item { Name = "Shoyu Organic Low Salt", Size = "20 ltr", RetailPrice = 4803150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Shoyu Organic Low Salt") },
                new Item { Name = "Shoyu USA Organic", Size = "5 ltr", RetailPrice = 605100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Shoyu USA Organic") },

                new Item { Name = "BRAGGS Amino Liquid", Size = "473 ml", RetailPrice = 104450M, IsAvailable = true, Product = Products.Single(m => m.Name == "BRAGGS Amino Liquid") },
                new Item { Name = "BRAGGS Amino Liquid", Size = "946 ml", RetailPrice = 222150M, IsAvailable = true, Product = Products.Single(m => m.Name == "BRAGGS Amino Liquid") },
                new Item { Name = "BRAGGS Apple Cider Vinegar Organic", Size = "946 ml", RetailPrice = 192550M, IsAvailable = true, Product = Products.Single(m => m.Name == "BRAGGS Apple Cider Vinegar Organic") },

                new Item { Name = "Akita Rice", Size = "0 kg", RetailPrice = 493750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Akita Rice") },
                new Item { Name = "Niigita Rice", Size = "0 kg", RetailPrice = 493750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Niigita Rice") },
                new Item { Name = "Wild Black Rice Organic", Size = "0 kg", RetailPrice = 108250M, IsAvailable = true, Product = Products.Single(m => m.Name == "Wild Black Rice Organic") },

                new Item { Name = "Wild Red Rice", Size = "0 kg", RetailPrice = 91800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Wild Red Rice") },
                new Item { Name = "Organic White Rice", Size = "0 kg", RetailPrice = 114300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Organic White Rice") },
                new Item { Name = "Organic Blend Rice (3 Grain)", Size = "0 kg", RetailPrice = 95300M, IsAvailable = true, Product = Products.Single(m => m.Name == "Organic Blend Rice (3 Grain)") },

                new Item { Name = "Brown Rice Long Grain Organic", Size = "1 kg", RetailPrice = 115800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Brown Rice Long Grain Organic") },
                new Item { Name = "Brown Rice Long Grain Organic", Size = "500 g", RetailPrice = 63700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Brown Rice Long Grain Organic") },

                new Item { Name = "Brown Rice Short Grain Organic", Size = "1 kg", RetailPrice = 124350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Brown Rice Short Grain Organic") },
                new Item { Name = "Brown Rice Short Grain Organic", Size = "500 g", RetailPrice = 68400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Brown Rice Short Grain Organic") },

                new Item { Name = "White Rice Short Grain Organic", Size = "1 kg", RetailPrice = 115800M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Rice Short Grain Organic") },
                new Item { Name = "White Rice Short Grain Organic", Size = "500 g", RetailPrice = 63700M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Rice Short Grain Organic") },

                new Item { Name = "Basmati Rice Brown Organic", Size = "1 kg", RetailPrice = 101400M, IsAvailable = true, Product = Products.Single(m => m.Name == "Basmati Rice Brown Organic") },
                new Item { Name = "Basmati Rice Brown Organic", Size = "500 g", RetailPrice = 55800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Basmati Rice Brown Organic") },
                new Item { Name = "Basmati Rice Brown Organic", Size = "250 g", RetailPrice = 30700M, IsAvailable = true, Product = Products.Single(m => m.Name == "Basmati Rice Brown Organic") },

                new Item { Name = "Basmati Rice White Organic", Size = "1 kg", RetailPrice = 109350M, IsAvailable = true, Product = Products.Single(m => m.Name == "Basmati Rice White Organic") },
                new Item { Name = "Basmati Rice White Organic", Size = "500 g", RetailPrice = 60150M, IsAvailable = true, Product = Products.Single(m => m.Name == "Basmati Rice White Organic") },
                new Item { Name = "Basmati Rice White Organic", Size = "250 g", RetailPrice = 33100M, IsAvailable = true, Product = Products.Single(m => m.Name == "Basmati Rice White Organic") },

                new Item { Name = "Glutinous Brown Rice Organic", Size = "1 kg", RetailPrice = 88600M, IsAvailable = true, Product = Products.Single(m => m.Name == "Glutinous Brown Rice Organic") },
                new Item { Name = "Glutinous Brown Rice Organic", Size = "500 g", RetailPrice = 48750M, IsAvailable = true, Product = Products.Single(m => m.Name == "Glutinous Brown Rice Organic") },
                new Item { Name = "Glutinous Brown Rice Organic", Size = "250 g", RetailPrice = 26800M, IsAvailable = true, Product = Products.Single(m => m.Name == "Glutinous Brown Rice Organic") },

                new Item { Name = "White Rice Short Organic", Size = "1 kg", RetailPrice = 101650M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Rice Short Organic") },
                new Item { Name = "White Rice Short Organic", Size = "500 g", RetailPrice = 55900M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Rice Short Organic") },
                new Item { Name = "White Rice Short Organic", Size = "250 g", RetailPrice = 30750M, IsAvailable = true, Product = Products.Single(m => m.Name == "White Rice Short Organic") },

                new Item { Name = "Atlantik Sea Salt Fine #2", Product = Products.Single(m => m.Name == "Atlantik Sea Salt Fine #2"), Size = "1 kg", RetailPrice = 68650M, IsAvailable = true },
                new Item { Name = "Atlantik Sea Salt Fine #2", Product = Products.Single(m => m.Name == "Atlantik Sea Salt Fine #2"), Size = "500 g", RetailPrice = 37750M, IsAvailable = true },
                new Item { Name = "Atlantik Sea Salt Fine #2", Product = Products.Single(m => m.Name == "Atlantik Sea Salt Fine #2"), Size = "250 g", RetailPrice = 20800M, IsAvailable = true },

                new Item { Name = "Atlantik Sea Salt Extra Fine #1", Product = Products.Single(m => m.Name == "Atlantik Sea Salt Extra Fine #1"), Size = "1 kg", RetailPrice = 76000M, IsAvailable = true },
                new Item { Name = "Atlantik Sea Salt Extra Fine #1", Product = Products.Single(m => m.Name == "Atlantik Sea Salt Extra Fine #1"), Size = "500 g", RetailPrice = 41800M, IsAvailable = true },
                new Item { Name = "Atlantik Sea Salt Extra Fine #1", Product = Products.Single(m => m.Name == "Atlantik Sea Salt Extra Fine #1"), Size = "250 g", RetailPrice = 23000M, IsAvailable = true },

                new Item { Name = "Atlantik Sea Salt Course", Product = Products.Single(m => m.Name == "Atlantik Sea Salt Course"), Size = "1 kg", RetailPrice = 68650M, IsAvailable = true },
                new Item { Name = "Atlantik Sea Salt Course", Product = Products.Single(m => m.Name == "Atlantik Sea Salt Course"), Size = "500 g", RetailPrice = 37750M, IsAvailable = true },
                new Item { Name = "Atlantik Sea Salt Course", Product = Products.Single(m => m.Name == "Atlantik Sea Salt Course"), Size = "250 g", RetailPrice = 20800M, IsAvailable = true },

                new Item { Name = "Himalayan Rock Salt (30-50mm)", Product = Products.Single(m => m.Name == "Himalayan Rock Salt (30-50mm)"), Size = "1 kg", RetailPrice = 179450M, IsAvailable = true },
                new Item { Name = "Himalayan Rock Salt (30-50mm)", Product = Products.Single(m => m.Name == "Himalayan Rock Salt (30-50mm)"), Size = "500 g", RetailPrice = 80200M, IsAvailable = true },
                new Item { Name = "Himalayan Rock Salt (30-50mm)", Product = Products.Single(m => m.Name == "Himalayan Rock Salt (30-50mm)"), Size = "250 g", RetailPrice = 44100M, IsAvailable = true },

                new Item { Name = "Himalayan Rock Salt Unrefined", Product = Products.Single(m => m.Name == "Himalayan Rock Salt Unrefined"), Size = "1 kg", RetailPrice = 78900M, IsAvailable = true },
                new Item { Name = "Himalayan Rock Salt Unrefined", Product = Products.Single(m => m.Name == "Himalayan Rock Salt Unrefined"), Size = "500 g", RetailPrice = 43400M, IsAvailable = true },
                new Item { Name = "Himalayan Rock Salt Unrefined", Product = Products.Single(m => m.Name == "Himalayan Rock Salt Unrefined"), Size = "250 g", RetailPrice = 23900M, IsAvailable = true },

                new Item { Name = "Himalayan Course Salt", Product = Products.Single(m => m.Name == "Himalayan Course Salt"), Size = "1 kg", RetailPrice = 82400M, IsAvailable = true },
                new Item { Name = "Himalayan Course Salt", Product = Products.Single(m => m.Name == "Himalayan Course Salt"), Size = "500 g", RetailPrice = 45300M, IsAvailable = true },
                new Item { Name = "Himalayan Course Salt", Product = Products.Single(m => m.Name == "Himalayan Course Salt"), Size = "250 g", RetailPrice = 24950M, IsAvailable = true },

                new Item { Name = "Mount Andes Rock Salt Unrefined", Product = Products.Single(m => m.Name == "Mount Andes Rock Salt Unrefined"), Size = "1 kg", RetailPrice = 77650M, IsAvailable = true },
                new Item { Name = "Mount Andes Rock Salt Unrefined", Product = Products.Single(m => m.Name == "Mount Andes Rock Salt Unrefined"), Size = "500 g", RetailPrice = 42700M, IsAvailable = true },
                new Item { Name = "Mount Andes Rock Salt Unrefined", Product = Products.Single(m => m.Name == "Mount Andes Rock Salt Unrefined"), Size = "250 g", RetailPrice = 23500M, IsAvailable = true },

                new Item { Name = "Brown Raw Sugar Organic", Product = Products.Single(m => m.Name == "Brown Raw Sugar Organic"), Size = "1 kg", RetailPrice = 76600M, IsAvailable = true },
                new Item { Name = "Brown Raw Sugar Organic", Product = Products.Single(m => m.Name == "Brown Raw Sugar Organic"), Size = "500 g", RetailPrice = 42150M, IsAvailable = true },
                new Item { Name = "Brown Raw Sugar Organic", Product = Products.Single(m => m.Name == "Brown Raw Sugar Organic"), Size = "250 g", RetailPrice = 20100M, IsAvailable = true },

                new Item { Name = "Cane Sugar Light Organic", Product = Products.Single(m => m.Name == "Cane Sugar Light Organic"), Size = "1 kg", RetailPrice = 95150M, IsAvailable = true },
                new Item { Name = "Cane Sugar Light Organic", Product = Products.Single(m => m.Name == "Cane Sugar Light Organic"), Size = "500 g", RetailPrice = 52350M, IsAvailable = true },
                new Item { Name = "Cane Sugar Light Organic", Product = Products.Single(m => m.Name == "Cane Sugar Light Organic"), Size = "250 g", RetailPrice = 25000M, IsAvailable = true },

                new Item { Name = "Cane Sugar Light Gold Organic", Product = Products.Single(m => m.Name == "Cane Sugar Light Gold Organic"), Size = "1 kg", RetailPrice = 95200M, IsAvailable = true },
                new Item { Name = "Cane Sugar Light Gold Organic", Product = Products.Single(m => m.Name == "Cane Sugar Light Gold Organic"), Size = "500 g", RetailPrice = 52350M, IsAvailable = true },
                new Item { Name = "Cane Sugar Light Gold Organic", Product = Products.Single(m => m.Name == "Cane Sugar Light Gold Organic"), Size = "250 g", RetailPrice = 25000M, IsAvailable = true },

                new Item { Name = "Canesugar Uni Light Organic", Product = Products.Single(m => m.Name == "Canesugar Uni Light Organic"), Size = "1 kg", RetailPrice = 116850M, IsAvailable = true },
                new Item { Name = "Canesugar Uni Light Organic", Product = Products.Single(m => m.Name == "Canesugar Uni Light Organic"), Size = "500 g", RetailPrice = 64300M, IsAvailable = true },
                new Item { Name = "Canesugar Uni Light Organic", Product = Products.Single(m => m.Name == "Canesugar Uni Light Organic"), Size = "250 g", RetailPrice = 30700M, IsAvailable = true },

                new Item { Name = "Blackstrap Molasses Powder Natural", Product = Products.Single(m => m.Name == "Blackstrap Molasses Powder Natural"), Size = "1 kg", RetailPrice = 86800M, IsAvailable = true },
                new Item { Name = "Blackstrap Molasses Powder Natural", Product = Products.Single(m => m.Name == "Blackstrap Molasses Powder Natural"), Size = "500 g", RetailPrice = 47750M, IsAvailable = true },
                new Item { Name = "Blackstrap Molasses Powder Natural", Product = Products.Single(m => m.Name == "Blackstrap Molasses Powder Natural"), Size = "250 g", RetailPrice = 22800M, IsAvailable = true },

                new Item { Name = "Blackstrap Molasses Powder Organic", Product = Products.Single(m => m.Name == "Blackstrap Molasses Powder Organic"), Size = "1 kg", RetailPrice = 90900M, IsAvailable = true },
                new Item { Name = "Blackstrap Molasses Powder Organic", Product = Products.Single(m => m.Name == "Blackstrap Molasses Powder Organic"), Size = "500 g", RetailPrice = 50000M, IsAvailable = true },
                new Item { Name = "Blackstrap Molasses Powder Organic", Product = Products.Single(m => m.Name == "Blackstrap Molasses Powder Organic"), Size = "250 g", RetailPrice = 23850M, IsAvailable = true },

                new Item { Name = "Blackstrap Molasses Liquid Natural", Product = Products.Single(m => m.Name == "Blackstrap Molasses Liquid Natural"), Size = "1 kg", RetailPrice = 108700M, IsAvailable = true },
                new Item { Name = "Blackstrap Molasses Liquid Natural", Product = Products.Single(m => m.Name == "Blackstrap Molasses Liquid Natural"), Size = "500 g", RetailPrice = 59800M, IsAvailable = true },
                new Item { Name = "Blackstrap Molasses Liquid Natural", Product = Products.Single(m => m.Name == "Blackstrap Molasses Liquid Natural"), Size = "250 g", RetailPrice = 28550M, IsAvailable = true },

                new Item { Name = "Blackstrap Molasses Liquid Organic", Product = Products.Single(m => m.Name == "Blackstrap Molasses Liquid Organic"), Size = "800 g", RetailPrice = 156800M, IsAvailable = true },
                new Item { Name = "Blackstrap Molasses Liquid Organic", Product = Products.Single(m => m.Name == "Blackstrap Molasses Liquid Organic"), Size = "430 g", RetailPrice = 117400M, IsAvailable = true },

                new Item { Name = "Orange Sugar Natural", Product = Products.Single(m => m.Name == "Orange Sugar Natural"), Size = "1 kg", RetailPrice = 90100M, IsAvailable = true },
                new Item { Name = "Orange Sugar Natural", Product = Products.Single(m => m.Name == "Orange Sugar Natural"), Size = "500 g", RetailPrice = 49550M, IsAvailable = true },
                new Item { Name = "Orange Sugar Natural", Product = Products.Single(m => m.Name == "Orange Sugar Natural"), Size = "250 g", RetailPrice = 23650M, IsAvailable = true },

                new Item { Name = "Barley Malt Organic", Product = Products.Single(m => m.Name == "Barley Malt Organic"), Size = "560 ml", RetailPrice = 120150M, IsAvailable = true },
                new Item { Name = "Maple Syrup Organic", Product = Products.Single(m => m.Name == "Maple Syrup Organic"), Size = "250 ml", RetailPrice = 357650M, IsAvailable = true },
                new Item { Name = "Agave Syrup (light)", Product = Products.Single(m => m.Name == "Agave Syrup (light)"), Size = "1 kg", RetailPrice = 217173M, IsAvailable = true },

                new Item { Name = "Kuranda Cashew & Almond", Product = Products.Single(m => m.Name == "Kuranda Cashew & Almond"), Size = "45 g", RetailPrice = 30950M, IsAvailable = true },
                new Item { Name = "Kuranda Macademia & Hazelnut", Product = Products.Single(m => m.Name == "Kuranda Macademia & Hazelnut"), Size = "45 g", RetailPrice = 30900M, IsAvailable = true },
                new Item { Name = "Kuranda Pecan & Pistachio", Product = Products.Single(m => m.Name == "Kuranda Pecan & Pistachio"), Size = "45 g", RetailPrice = 30900M, IsAvailable = true },

                new Item { Name = "Kuranda Nut Berry", Product = Products.Single(m => m.Name == "Kuranda Nut Berry"), Size = "45 g", RetailPrice = 30900M, IsAvailable = true },
                new Item { Name = "Kuranda Chia & Almond", Product = Products.Single(m => m.Name == "Kuranda Chia & Almond"), Size = "40 g", RetailPrice = 47100M, IsAvailable = true },
                new Item { Name = "Kuranda Chia Nut & Berry", Product = Products.Single(m => m.Name == "Kuranda Chia Nut & Berry"), Size = "40 g", RetailPrice = 47100M, IsAvailable = true },

                new Item { Name = "Kuranda Chia Cacao Nibs", Product = Products.Single(m => m.Name == "Kuranda Chia Cacao Nibs"), Size = "40 g", RetailPrice = 47100M, IsAvailable = true },
                new Item { Name = "Kuranda Chia & Quinoa", Product = Products.Single(m => m.Name == "Kuranda Chia & Quinoa"), Size = "40 g", RetailPrice = 47100M, IsAvailable = true },
                new Item { Name = "Kuranda Muesli - Banana & Date w/ Amarath", Product = Products.Single(m => m.Name == "Kuranda Muesli - Banana & Date w/ Amarath"), Size = "500 g", RetailPrice = 203800M, IsAvailable = true },
                new Item { Name = "Kuranda Muesli - Berry Blend w/ Amarath", Product = Products.Single(m => m.Name == "Kuranda Muesli - Berry Blend w/ Amarath"), Size = "500 g", RetailPrice = 203800M, IsAvailable = true },

                new Item { Name = "Sea Vegetable Chips", Product = Products.Single(m => m.Name == "Sea Vegetable Chips"), Size = "75 g", RetailPrice = 51100M, IsAvailable = true },
                new Item { Name = "Vegetable Chips", Product = Products.Single(m => m.Name == "Vegetable Chips"), Size = "60 g", RetailPrice = 42850M, IsAvailable = true },
                new Item { Name = "Mungbeans Chip Muso", Product = Products.Single(m => m.Name == "Mungbeans Chip Muso"), Size = "50 g", RetailPrice = 43900M, IsAvailable = true },
                new Item { Name = "Quinoa Crackers", Product = Products.Single(m => m.Name == "Quinoa Crackers"), Size = "60 g", RetailPrice = 50300M, IsAvailable = true },

                new Item { Name = "Alfafa Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Alfafa Grass Powder (200 mesh) Organic"), Size = "1 kg", RetailPrice = 418750M, IsAvailable = true },
                new Item { Name = "Alfafa Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Alfafa Grass Powder (200 mesh) Organic"), Size = "500 g", RetailPrice = 230300M, IsAvailable = true },
                new Item { Name = "Alfafa Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Alfafa Grass Powder (200 mesh) Organic"), Size = "250 g", RetailPrice = 109950M, IsAvailable = true },
                new Item { Name = "Alfafa Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Alfafa Grass Powder (200 mesh) Organic"), Size = "100 g", RetailPrice = 87950M, IsAvailable = true },

                new Item { Name = "Buckwheat Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Buckwheat Grass Powder (200 mesh) Organic"), Size = "1 kg", RetailPrice = 418750M, IsAvailable = true },
                new Item { Name = "Buckwheat Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Buckwheat Grass Powder (200 mesh) Organic"), Size = "500 g", RetailPrice = 230300M, IsAvailable = true },
                new Item { Name = "Buckwheat Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Buckwheat Grass Powder (200 mesh) Organic"), Size = "250 g", RetailPrice = 109950M, IsAvailable = true },
                new Item { Name = "Buckwheat Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Buckwheat Grass Powder (200 mesh) Organic"), Size = "100 g", RetailPrice = 87950M, IsAvailable = true },

                new Item { Name = "Barley Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Barley Grass Powder (200 mesh) Organic"), Size = "1 kg", RetailPrice = 486200M, IsAvailable = true },
                new Item { Name = "Barley Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Barley Grass Powder (200 mesh) Organic"), Size = "500 g", RetailPrice = 267450M, IsAvailable = true },
                new Item { Name = "Barley Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Barley Grass Powder (200 mesh) Organic"), Size = "250 g", RetailPrice = 127650M, IsAvailable = true },
                new Item { Name = "Barley Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Barley Grass Powder (200 mesh) Organic"), Size = "100 g", RetailPrice = 102100M, IsAvailable = true },

                new Item { Name = "Chlorella Powder (55% Protein) Organic", Product = Products.Single(m => m.Name == "Chlorella Powder (55% Protein) Organic"), Size = "1 kg", RetailPrice = 962250M, IsAvailable = true },
                new Item { Name = "Chlorella Powder (55% Protein) Organic", Product = Products.Single(m => m.Name == "Chlorella Powder (55% Protein) Organic"), Size = "500 g", RetailPrice = 529250M, IsAvailable = true },
                new Item { Name = "Chlorella Powder (55% Protein) Organic", Product = Products.Single(m => m.Name == "Chlorella Powder (55% Protein) Organic"), Size = "250 g", RetailPrice = 252600M, IsAvailable = true },
                new Item { Name = "Chlorella Powder (55% Protein) Organic", Product = Products.Single(m => m.Name == "Chlorella Powder (55% Protein) Organic"), Size = "100 g", RetailPrice = 202100M, IsAvailable = true },

                new Item { Name = "Kale Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Kale Powder (200 mesh) Organic"), Size = "1 kg", RetailPrice = 765600M, IsAvailable = true },
                new Item { Name = "Kale Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Kale Powder (200 mesh) Organic"), Size = "500 g", RetailPrice = 421100M, IsAvailable = true },
                new Item { Name = "Kale Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Kale Powder (200 mesh) Organic"), Size = "250 g", RetailPrice = 201000M, IsAvailable = true },
                new Item { Name = "Kale Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Kale Powder (200 mesh) Organic"), Size = "100 g", RetailPrice = 160800M, IsAvailable = true },

                new Item { Name = "Spirulina Powder Organic", Product = Products.Single(m => m.Name == "Spirulina Powder Organic"), Size = "1 kg", RetailPrice = 979700M, IsAvailable = true },
                new Item { Name = "Spirulina Powder Organic", Product = Products.Single(m => m.Name == "Spirulina Powder Organic"), Size = "500 g", RetailPrice = 538850M, IsAvailable = true },
                new Item { Name = "Spirulina Powder Organic", Product = Products.Single(m => m.Name == "Spirulina Powder Organic"), Size = "250 g", RetailPrice = 257200M, IsAvailable = true },
                new Item { Name = "Spirulina Powder Organic", Product = Products.Single(m => m.Name == "Spirulina Powder Organic"), Size = "100 g", RetailPrice = 205750M, IsAvailable = true },

                new Item { Name = "Spirulina Powder (PH) Organic", Product = Products.Single(m => m.Name == "Spirulina Powder (PH) Organic"), Size = "1 kg", RetailPrice = 849650M, IsAvailable = true },
                new Item { Name = "Spirulina Powder (PH) Organic", Product = Products.Single(m => m.Name == "Spirulina Powder (PH) Organic"), Size = "500 g", RetailPrice = 467350M, IsAvailable = true },
                new Item { Name = "Spirulina Powder (PH) Organic", Product = Products.Single(m => m.Name == "Spirulina Powder (PH) Organic"), Size = "250 g", RetailPrice = 223100M, IsAvailable = true },
                new Item { Name = "Spirulina Powder (PH) Organic", Product = Products.Single(m => m.Name == "Spirulina Powder (PH) Organic"), Size = "100 g", RetailPrice = 178450M, IsAvailable = true },

                new Item { Name = "Spirulina Tablet Organic", Product = Products.Single(m => m.Name == "Spirulina Tablet Organic"), Size = "1 kg", RetailPrice = 1652100M, IsAvailable = true },
                new Item { Name = "Spirulina Tablet Organic", Product = Products.Single(m => m.Name == "Spirulina Tablet Organic"), Size = "500 g", RetailPrice = 908700M, IsAvailable = true },
                new Item { Name = "Spirulina Tablet Organic", Product = Products.Single(m => m.Name == "Spirulina Tablet Organic"), Size = "250 g", RetailPrice = 433700M, IsAvailable = true },
                new Item { Name = "Spirulina Tablet Organic", Product = Products.Single(m => m.Name == "Spirulina Tablet Organic"), Size = "100 g", RetailPrice = 346950M, IsAvailable = true },

                new Item { Name = "Wheat Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Wheat Grass Powder (200 mesh) Organic"), Size = "1 kg", RetailPrice = 547000M, IsAvailable = true },
                new Item { Name = "Wheat Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Wheat Grass Powder (200 mesh) Organic"), Size = "500 g", RetailPrice = 301000M, IsAvailable = true },
                new Item { Name = "Wheat Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Wheat Grass Powder (200 mesh) Organic"), Size = "250 g", RetailPrice = 143600M, IsAvailable = true },
                new Item { Name = "Wheat Grass Powder (200 mesh) Organic", Product = Products.Single(m => m.Name == "Wheat Grass Powder (200 mesh) Organic"), Size = "100 g", RetailPrice = 114900M, IsAvailable = true },

                new Item { Name = "DR. Broners Liquid Soap Citrus Orange", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Citrus Orange"), Size = "473 ml", RetailPrice = 231448M, IsAvailable = true },
                new Item { Name = "DR. Broners Liquid Soap Citrus Orange", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Citrus Orange"), Size = "236 ml", RetailPrice = 136096M, IsAvailable = true },

                new Item { Name = "DR. Broners Liquid Soap Lavender", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Lavender"), Size = "473 ml", RetailPrice = 209919M, IsAvailable = true },
                new Item { Name = "DR. Broners Liquid Soap Lavender", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Lavender"), Size = "236 ml", RetailPrice = 126770M, IsAvailable = true },

                new Item { Name = "DR. Broners Liquid Soap Eucalyptus", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Eucalyptus"), Size = "473 ml", RetailPrice = 209919M, IsAvailable = true },
                new Item { Name = "DR. Broners Liquid Soap Eucalyptus", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Eucalyptus"), Size = "236 ml", RetailPrice = 126770M, IsAvailable = true },

                new Item { Name = "DR. Broners Liquid Soap Almond", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Almond"), Size = "473 ml", RetailPrice = 209919M, IsAvailable = true },
                new Item { Name = "DR. Broners Liquid Soap Almond", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Almond"), Size = "236 ml", RetailPrice = 126770M, IsAvailable = true },

                new Item { Name = "DR. Broners Liquid Soap Peppermint", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Peppermint"), Size = "473 ml", RetailPrice = 209919M, IsAvailable = true },
                new Item { Name = "DR. Broners Liquid Soap Peppermint", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Peppermint"), Size = "236 ml", RetailPrice = 126770M, IsAvailable = true },

                new Item { Name = "DR. Broners Liquid Soap Tea Tree", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Tea Tree"), Size = "473 ml", RetailPrice = 209919M, IsAvailable = true },
                new Item { Name = "DR. Broners Liquid Soap Tea Tree", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Tea Tree"), Size = "236 ml", RetailPrice = 126770M, IsAvailable = true },

                new Item { Name = "DR. Broners Liquid Soap Baby Mild", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Baby M"), Size = "473 ml", RetailPrice = 209919M, IsAvailable = true },
                new Item { Name = "DR. Broners Liquid Soap Baby Mild", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Baby M"), Size = "236 ml", RetailPrice = 126770M, IsAvailable = true },

                new Item { Name = "DR. Broners Liquid Soap Rose", Product = Products.Single(m => m.Name == "DR. Broners Liquid Soap Lavender"), Size = "236 ml", RetailPrice = 136096M, IsAvailable = true },

                new Item { Name = "DR. Broners Soap Bar Rose", Product = Products.Single(m => m.Name == "DR. Broners Soap Bar Rose"), Size = "140 g", RetailPrice = 88572M, IsAvailable = true },
                new Item { Name = "DR. Broners Soap Bar Citrus Orange", Product = Products.Single(m => m.Name == "DR. Broners Soap Bar Citrus Orange"), Size = "140 g", RetailPrice = 88572M, IsAvailable = true },
                new Item { Name = "DR. Broners Soap Bar Baby Mild", Product = Products.Single(m => m.Name == "DR. Broners Soap Bar Baby Mild"), Size = "140 g", RetailPrice = 88572M, IsAvailable = true },
                new Item { Name = "DR. Broners Soap Bar Tea Tree", Product = Products.Single(m => m.Name == "DR. Broners Soap Bar Tea Tree"), Size = "140 g", RetailPrice = 88572M, IsAvailable = true },
                new Item { Name = "DR. Broners Soap Bar Peppermint", Product = Products.Single(m => m.Name == "DR. Broners Soap Bar Peppermint"), Size = "140 g", RetailPrice = 88572M, IsAvailable = true },
                new Item { Name = "DR. Broners Soap Bar Almond", Product = Products.Single(m => m.Name == "DR. Broners Soap Bar Almond"), Size = "140 g", RetailPrice = 88572M, IsAvailable = true },
                new Item { Name = "DR. Broners Soap Bar Eucalyptus", Product = Products.Single(m => m.Name == "DR. Broners Soap Bar Eucalyptus"), Size = "140 g", RetailPrice = 88572M, IsAvailable = true },
                new Item { Name = "DR. Broners Soap Bar Lavender", Product = Products.Single(m => m.Name == "DR. Broners Soap Bar Lavender"), Size = "140 g", RetailPrice = 88572M, IsAvailable = true },

                new Item { Name = "DR. Broners Lotion", Product = Products.Single(m => m.Name == "DR. Broners Lotion"), Size = "227 g", RetailPrice = 195135M, IsAvailable = true },
                new Item { Name = "DR. Broners Skin & Tattoo Balm", Product = Products.Single(m => m.Name == "DR. Broners Skin & Tattoo Balm"), Size = "14 g", RetailPrice = 100117M, IsAvailable = true },
                new Item { Name = "Chandrika Ayurvedic Soap", Product = Products.Single(m => m.Name == "Chandrika Ayurvedic Soap"), Size = "0 g", RetailPrice = 10854M, IsAvailable = true },

                new Item { Name = "Vicco Toothpaste 10x", Product = Products.Single(m => m.Name == "Vicco Toothpaste 10x"), Size = "200 g", RetailPrice = 84993M, IsAvailable = true },
                new Item { Name = "Vicco Toothpaste 10x", Product = Products.Single(m => m.Name == "Vicco Toothpaste 10x"), Size = "150 g", RetailPrice = 67344M, IsAvailable = true },
                new Item { Name = "Vicco Toothpaste 10x", Product = Products.Single(m => m.Name == "Vicco Toothpaste 10x"), Size = "100 g", RetailPrice = 47883M, IsAvailable = true }

            }.ForEach(m => context.Items.Add(m));

            List<State> States = new List<State>()
            {
                new State { StateName = "Bali", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Bangka Belitung", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Banten", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Bengkulu", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "DI Yogyakarta", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "DKI Jakarta", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Gorontalo", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Jambi", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Jawa Barat", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Jawa Tengah", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Jawa Timur", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Kalimantan Barat", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Kalimantan Selatan", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Kalimantan Tengah", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Kalimantan Timur", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Kalimantan Utara", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Kepulauan Riau", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Lampung", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Maluku", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Maluku Utara", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Nangroe Aceh Darussalam", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Nusa Tenggara Barat", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Nusa Tenggara Timur", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Papua", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Papua Barat", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Riau", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Sulawesi Barat", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Sulawesi Selatan", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Sulawesi Tengah", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Sulawesi Tenggara", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Sulawesi Utara", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Sumatera Barat", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Sumatera Selatan", PricePerKg = 0M, DeliveryDuration = ""+" days" },
                new State { StateName = "Sumatera Utara", PricePerKg = 0M, DeliveryDuration = ""+" days" }
            };

            new List<City>
            {
                new City { CityName = "Kabupaten Badung", State = States.Single(m => m.StateName == "Bali") },
                new City { CityName = "Kabupaten Bangli", State = States.Single(m => m.StateName == "Bali") },
                new City { CityName = "Kabupaten Buleleng", State = States.Single(m => m.StateName == "Bali") },
                new City { CityName = "Kota Denpasar", State = States.Single(m => m.StateName == "Bali") },
                new City { CityName = "Kabupaten Gianyar", State = States.Single(m => m.StateName == "Bali") },
                new City { CityName = "Kabupaten Jembrana", State = States.Single(m => m.StateName == "Bali") },
                new City { CityName = "Kabupaten Karangasen", State = States.Single(m => m.StateName == "Bali") },
                new City { CityName = "Kabupaten Klungkung", State = States.Single(m => m.StateName == "Bali") },
                new City { CityName = "Kabupaten Tabanan", State = States.Single(m => m.StateName == "Bali") },

                new City { CityName = "Kabupaten Bangka", State = States.Single(m => m.StateName == "Bangka Belitung") },
                new City { CityName = "Kabupaten Bangka Barat", State = States.Single(m => m.StateName == "Bangka Belitung") },
                new City { CityName = "Kabupaten Bangka Selatan", State = States.Single(m => m.StateName == "Bangka Belitung") },
                new City { CityName = "Kabupaten Bangka Tengah", State = States.Single(m => m.StateName == "Bangka Belitung") },
                new City { CityName = "Kabupaten Belitung", State = States.Single(m => m.StateName == "Bangka Belitung") },
                new City { CityName = "Kabupaten Belitung Timur", State = States.Single(m => m.StateName == "Bangka Belitung") },
                new City { CityName = "Kota Pangkal Pinang", State = States.Single(m => m.StateName == "Bangka Belitung") },

                new City { CityName = "Kota Cilegon", State = States.Single(m => m.StateName == "Banten") },
                new City { CityName = "Kabupaten Lebak", State = States.Single(m => m.StateName == "Banten") },
                new City { CityName = "Kabupaten Pandeglang", State = States.Single(m => m.StateName == "Banten") },
                new City { CityName = "Kabupaten Serang", State = States.Single(m => m.StateName == "Banten") },
                new City { CityName = "Kota Serang", State = States.Single(m => m.StateName == "Banten") },
                new City { CityName = "Kabupaten Tangerang", State = States.Single(m => m.StateName == "Banten") },
                new City { CityName = "Kota Tangerang", State = States.Single(m => m.StateName == "Banten") },
                new City { CityName = "Kota Tangerang Selatan", State = States.Single(m => m.StateName == "Banten") },

                new City { CityName = "Kota Bengkulu", State = States.Single(m => m.StateName == "Bengkulu") },
                new City { CityName = "Kabupaten Bengkulu Selatan", State = States.Single(m => m.StateName == "Bengkulu") },
                new City { CityName = "Kabupaten Bengkulu Tengah", State = States.Single(m => m.StateName == "Bengkulu") },
                new City { CityName = "Kabupaten Bengkulu Utara", State = States.Single(m => m.StateName == "Bengkulu") },
                new City { CityName = "Kabupaten Kaur", State = States.Single(m => m.StateName == "Bengkulu") },
                new City { CityName = "Kabupaten Kepahiang", State = States.Single(m => m.StateName == "Bengkulu") },
                new City { CityName = "Kabupaten Lebong", State = States.Single(m => m.StateName == "Bengkulu") },
                new City { CityName = "Kabupaten Muko Luko", State = States.Single(m => m.StateName == "Bengkulu") },
                new City { CityName = "Kabupaten Rejang Lebong", State = States.Single(m => m.StateName == "Bengkulu") },
                new City { CityName = "Kabupaten Seluma", State = States.Single(m => m.StateName == "Bengkulu") },

                new City { CityName = "Kabupaten Bantul", State = States.Single(m => m.StateName == "DI Yogyakarta") },
                new City { CityName = "Kabupaten Gunung Kidul", State = States.Single(m => m.StateName == "DI Yogyakarta") },
                new City { CityName = "Kabupaten Kulon Progo", State = States.Single(m => m.StateName == "DI Yogyakarta") },
                new City { CityName = "Kabupaten Sleman", State = States.Single(m => m.StateName == "DI Yogyakarta") },
                new City { CityName = "Kota Yogyakarta", State = States.Single(m => m.StateName == "DI Yogyakarta") },

                new City { CityName = "Kota Jakarta Barat", State = States.Single(m => m.StateName == "DKI Jakarta") },
                new City { CityName = "Kota Jakarta Pusat", State = States.Single(m => m.StateName == "DKI Jakarta") },
                new City { CityName = "Kota Jakarta Selatan", State = States.Single(m => m.StateName == "DKI Jakarta") },
                new City { CityName = "Kota Jakarta Timur", State = States.Single(m => m.StateName == "DKI Jakarta") },
                new City { CityName = "Kota Jakarta Utara", State = States.Single(m => m.StateName == "DKI Jakarta") },
                new City { CityName = "Kabupaten Kepulauan Seribu", State = States.Single(m => m.StateName == "DKI Jakarta") },

                new City { CityName = "Kabupaten Boalemo", State = States.Single(m => m.StateName == "Gorontalo") },
                new City { CityName = "Kabupaten Bone Bolango", State = States.Single(m => m.StateName == "Gorontalo") },
                new City { CityName = "Kabupaten Gorontalo", State = States.Single(m => m.StateName == "Gorontalo") },
                new City { CityName = "Kota Gorontalo", State = States.Single(m => m.StateName == "Gorontalo") },
                new City { CityName = "Kabupaten Gorontalo Utara", State = States.Single(m => m.StateName == "Gorontalo") },
                new City { CityName = "Kabupaten Pohuwato", State = States.Single(m => m.StateName == "Gorontalo") },

                new City { CityName = "Kabupaten Batang Hari", State = States.Single(m => m.StateName == "Jambi") },
                new City { CityName = "Kabupaten Bungo", State = States.Single(m => m.StateName == "Jambi") },
                new City { CityName = "Kota Jambi", State = States.Single(m => m.StateName == "Jambi") },
                new City { CityName = "Kabupaten Kerinci", State = States.Single(m => m.StateName == "Jambi") },
                new City { CityName = "Kabupaten Merangin", State = States.Single(m => m.StateName == "Jambi") },
                new City { CityName = "Kabupaten Muaro Jambi", State = States.Single(m => m.StateName == "Jambi") },
                new City { CityName = "Kabupaten Sarolangun", State = States.Single(m => m.StateName == "Jambi") },
                new City { CityName = "Kota Sungaipenuh", State = States.Single(m => m.StateName == "Jambi") },
                new City { CityName = "Kabupaten Tanjung Jabung Barat", State = States.Single(m => m.StateName == "Jambi") },
                new City { CityName = "Kabupaten Tanjung Jabung Timur", State = States.Single(m => m.StateName == "Jambi") },
                new City { CityName = "Kabupaten Tebo", State = States.Single(m => m.StateName == "Jambi") },

                new City { CityName = "Kabupaten Bandung", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kota Bandung", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kabupaten Bandung Barat", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kota Banjar", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kabupaten Bekasi", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kota Bekasi", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kabupaten Bogor", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kota Bogor", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kabupaten Ciamis", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kabupaten Cianjur", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kota Cimahi", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kabupaten Cirebon", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kota Cirebon", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kota Depok", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kabupaten Garut", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kabupaten Indramayu", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kabupaten Karawang", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kabupaten Kuningan", State = States.Single(m => m.StateName == "Jawa Barat") },
                new City { CityName = "Kabupaten Majalengka", State = States.Single(m => m.StateName == "Jawa Barat") },

                new City { CityName = "Kabupaten Banjarnegara", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Banyumas", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Batang", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Blora", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Boyolali", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Brebes", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Cilacap", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Demak", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Grobogan", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Jepara", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Karanganyar", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Kebumen", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Kendal", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Klaten", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Kudus", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Magelang", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kota Magelang", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Pati", State = States.Single(m => m.StateName == "Jawa Tengah") },
                new City { CityName = "Kabupaten Pekalongan", State = States.Single(m => m.StateName == "Jawa Tengah") },

                new City { CityName = "Kabupaten Bangkalan", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Banyuwangi", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kota Batu", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Blitar", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kota Blitar", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Bojonegro", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Bondowoso", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Gresik", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Jember", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Jombang", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Kediri", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kota Kediri", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Lamongan", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Lumajang", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Madiun", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kota Madiun", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Magetan", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Malang", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kota Malang", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Mojokerto", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kota Mojokerto", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Nganjuk", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Ngawi", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Pacitan", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Pamekasan", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Pasuruan", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kota Pasuruan", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Ponorogo", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Probolinggo", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kota Probolinggo", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Sampang", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Sidoarjo", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Situbondo", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Sumenep", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kota Surabaya", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Trenggalek", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Tuban", State = States.Single(m => m.StateName == "Jawa Timur") },
                new City { CityName = "Kabupaten Tulungagung", State = States.Single(m => m.StateName == "Jawa Timur") },
                
                new City { CityName = "Kabupaten Bengkayang", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kabupaten Kapuas Hulu", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kabupaten Kayong Utara", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kabupaten Ketapang", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kabupaten Kubu Raya", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kabupaten Landak", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kabupaten Melawi", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kabupaten Pontianak", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kota Pontianak", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kabupaten Sambas", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kabupaten Sanggau", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kabupaten Sekadau", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kota Singkawang", State = States.Single(m => m.StateName == "Kalimantan Barat") },
                new City { CityName = "Kabupaten Sintang", State = States.Single(m => m.StateName == "Kalimantan Barat") },

                new City { CityName = "Kabupaten Belangan", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                new City { CityName = "Kabupaten Banjar", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                new City { CityName = "Kota Banjarbaru", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                new City { CityName = "Kota Banjarmasin", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                new City { CityName = "Kabupaten Barito Kuala", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                new City { CityName = "Kabupaten Hulu Sungai Selatan", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                new City { CityName = "Kabupaten Hulu Sungai Tengah", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                new City { CityName = "Kabupaten Hulu Sungai Utara", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                new City { CityName = "Kabupaten Kotabaru", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                new City { CityName = "Kabupaten Tabalong", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                new City { CityName = "Kabupaten Tanah Bumbu", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                new City { CityName = "Kabupaten Tanah Laut", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                new City { CityName = "Kabupaten Tapin", State = States.Single(m => m.StateName == "Kalimantan Selatan") },
                

                new City { CityName = "Kabupaten Barito Selatan", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "Kabupaten Barito Timur", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "Kabupaten Barito Utara", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "Kabupaten Gunung Mas", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "Kabupaten Kapuas", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "Kabupaten Katingan", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "Kabupaten Kotawaringin Barat", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "Kabupaten Kotawaringin Timur", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "", State = States.Single(m => m.StateName == "Kalimantan Tengah") },
                new City { CityName = "", State = States.Single(m => m.StateName == "Kalimantan Tengah") },

                new City { CityName = "", State = States.Single(m => m.StateName == "Kalimantan Tengah") },


            }.ForEach(m => context.Cities.Add(m));
            
            base.Seed(context);
            context.SaveChanges();






            


        }
    }
}