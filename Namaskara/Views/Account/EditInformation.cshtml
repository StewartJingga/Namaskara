@model Namaskara.ViewModels.UserAccountViewModel

@{
    ViewBag.Title = "Edit Information";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Email)
    <div id="user-edit-information">
        <div class="left-content">
            <div class="detail-template">
                <div class="label-checkout">
                    <h4>Edit Information</h4>
                </div>
                <div>
                    <div>
                        <div class="detailsBox">
                            <h6>@Html.LabelFor(model => model.FirstName)</h6>
                            @Html.EditorFor(model => model.FirstName)
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                        <div class="detailsBox">
                            <h6>@Html.LabelFor(model => model.LastName)</h6>
                            @Html.EditorFor(model => model.LastName)
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                        <div class="detailsBox address">
                            <h6>@Html.LabelFor(model => model.Address)</h6>
                            @Html.EditorFor(model => model.Address)
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                        <div class="detailsBox">
                            <h6>@Html.LabelFor(model => model.Country)</h6>
                            @Html.DropDownListFor(model => model.Country, ViewBag.Countries as IEnumerable<SelectListItem>, "-- Select Country --")
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        </div>

                        <div class="detailsBox">
                            <h6>@Html.LabelFor(model => model.State)</h6>
                            @Html.DropDownListFor(m => m.State, ViewBag.States as IEnumerable<SelectListItem>, "-- Select State --")
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>

                        <div class="detailsBox">
                            <h6>@Html.LabelFor(model => model.City)</h6>
                            @Html.DropDownListFor(m => m.City, ViewBag.Cities as IEnumerable<SelectListItem>, "-- Select City --")
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                        <div class="detailsBox">
                            <h6>@Html.LabelFor(model => model.PostalCode)</h6>
                            @Html.EditorFor(model => model.PostalCode)
                            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                        </div>
                        <div class="detailsBox">
                            <h6>@Html.LabelFor(model => model.Phone)</h6>
                            @Html.EditorFor(model => model.Phone)
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                        <div class="clear"></div>
                    </div>
                </div>
            </div>
            @Html.ActionLink("Cancel", "Index", null, htmlAttributes: new { @class = "button-namas"})
            <button class="button-namas">Save</button>
        </div>
        <div>
            @{Html.RenderAction("AccountNavigation");}
        </div>
        
    </div>

    <div class="clear"></div>

}


@section scripts {

    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">
        $("#State").change(function () {
            var state = $(this).val();
            if (state != 0) {
                $.post("/Checkout/GetCities", { state: state },
                function (data) {
                    if (data != null) {

                        var output = "";
                        for (var i = 0; i < data.length; i++) {
                            output += '<option value=\"' + data[i] + '\">' + data[i] + '</option>' ;
                        }
                        $("#City").empty().append(output);
                    }
                });
            }
            else {
                $("#City").empty().append("<option>--Select City--</option>");
            }

        });
    </script>
}




