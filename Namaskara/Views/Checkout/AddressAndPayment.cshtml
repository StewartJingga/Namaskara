@model Namaskara.ViewModels.CheckoutViewModel
@using Namaskara.Models

@{
    ViewBag.Title = "AddressAndPayment";
    string header = User.Identity.IsAuthenticated ? "Checkout" : "Guest Checkout";
}

<h2>@header</h2>

@if (!User.Identity.IsAuthenticated)
{
    @Html.ActionLink("Existing Customer", "Login", "Account", new { returnUrl = "/Checkout/AddressAndPayment" }, null)
}

@using (Html.BeginForm("AddressAndPayment", "Checkout", FormMethod.Post, new { id = "checkoutForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row" id="preCheckout">

            <div class="col-md-6" id="contactDetails">
                @if (User.Identity.IsAuthenticated)
                {
                    @Html.Hidden("Email", User.Identity.Name)
                    @Html.Hidden("ConfirmEmail", User.Identity.Name)
                }
                
                
                <h4>Contact Detail</h4>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (!User.Identity.IsAuthenticated)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmEmail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Country, ViewBag.Countries as IEnumerable<SelectListItem>, "-- Select Country --")
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        
                        @Html.DropDownListFor(m => m.State, ViewBag.States as IEnumerable<SelectListItem>, "-- Select State --")
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.City, ViewBag.Cities as IEnumerable<SelectListItem>, "-- Select City --")
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr />

                <div class="form-group">
                    <div>
                        <span>@Html.CheckBox("SameDeliveryAddress", true)</span>
                        <span>@Html.LabelFor(model => model.SameDeliveryAddress)</span>
                    </div>

                </div>

            </div>
            <div class="col-md-4" id="shippingDetails" style="display:none;">
                <h4>Shipping Address</h4>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShippingAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShippingAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingCountry, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ShippingCountry, ViewBag.Countries as IEnumerable<SelectListItem>, "-- Select Country --")
                        @Html.ValidationMessageFor(model => model.ShippingCountry, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingState, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.ShippingState, ViewBag.States as IEnumerable<SelectListItem>, "-- Select State --")
                        @Html.ValidationMessageFor(model => model.ShippingState, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingCity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.ShippingCity, ViewBag.Cities as IEnumerable<SelectListItem>, "-- Select City --")
                        @Html.ValidationMessageFor(model => model.ShippingCity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingPostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShippingPostalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShippingPostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr />
            </div>
            <div class="col-md-6" id="deliveryDetails">
                <h4>Delivery Details</h4>
                <hr />
                <table>
                    <tr>
                        <td>Destination City: </td>
                        <td id="city">-</td>
                    </tr>
                    <tr>
                        <td>Item Weight: </td>
                        <td>@ViewBag.Weight</td>
                    </tr>
                    <tr>
                        <td>Delivery Cost: </td>
                        <td class="deliveryCost">-</td>
                    </tr>

                </table>

                <hr />

                <h6>Enter Promo Code:</h6>
                <input name="Code" id="Code" type="text" />
                <span>
                    <input type="button" id="checkPromo" value="Enter" />
                </span>
                <div id="promoResult"></div>
                <input type="checkbox" name="PromoActivated" id="PromoActivated" hidden />
                <input name="PromoCode" id="PromoCode" type="text" hidden/>

                <hr />
                <div class="form-group" style="float:right;">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="preCheckoutSubmit" value="Submit Order" class="btn btn-default" />
                    </div>
                </div>

            </div>
        </div>
        <div id="reviewOrder" style="display:none;">
            <input id="return" value="return" type="button" />
            <table>
                <tr>
                    <th>Item</th>
                    <th>Quantity</th>
                    <th>Price</th>
                </tr>
                @foreach (var item in Model.CartItems)
                {
                    <tr id="row-@item.RecordId">
                        <td>
                            @item.Item.DisplayName
                        </td>

                        <td>
                            @item.Count
                        </td>

                        <td style="text-align:right">
                            @if (item.Item.Product.IsOnSale)
                            {
                                @Html.Raw(String.Format("Rp {0:n}", Utilities.FindReducedPrice(item.Item.RetailPrice, item.Item.Product.DiscountPercentage) * item.Count));
                            }
                            else
                            {
                                @Html.Raw(String.Format("Rp {0:n}", @item.Item.RetailPrice * @item.Count));
                            }

                        </td>
                    </tr>
                }
                <tr style="border-top: 2px solid black">
                    <td>Total Item Price</td>
                    <td></td>
                    <td style="text-align:right">@Model.CartTotalPrice</td>
                </tr>
                <tr>
                    <td></td>
                    <td>Delivery Cost</td>
                    <td class="deliveryCost" style="text-align:right"></td>
                </tr>
                
                <tr id="promoRow">
                    <td></td>
                    <td>Promo Discount</td>
                    <td id="promoDiscount" style="text-align:right">0.00</td>
                </tr>
                <tr style="border-top: 2px solid black">
                    <td></td>
                    <td>Total Price (Rp)</td>
                    <td id="totalPrice" style="text-align:right"></td>
                </tr>
            </table>

            <input type="submit" value="Finalise Order" />
        </div>



    </div>
}

@section scripts{

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/CheckoutJS.js"></script>
}




